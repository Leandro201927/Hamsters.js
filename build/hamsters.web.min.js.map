{"version":3,"sources":["webpack:///webpack/bootstrap 96860aae3fdbada7b30e","webpack:///./hamsters.js","webpack:///./core/version.js","webpack:///./core/habitat.js","webpack:///../~/node-libs-browser/~/process/browser.js","webpack:///./core/wheel.js","webpack:///./core/pool.js","webpack:///./core/data.js","webpack:///./core/logger.js","webpack:///./core/memoizer.js"],"names":["hamstersjs","version","init","initializeLibrary","habitat","data","pool","logger","memoizer","scheduleTask","run","hamstersRun","bind","promise","hamstersPromise","habitatKeys","startOptions","processStartOptions","legacy","persistence","spawnHamsters","maxThreads","info","Object","keys","key","indexOf","toLowerCase","forceLegacyMode","params","functionToRun","hamstersJob","webWorker","prepareJob","id","tasks","length","count","threads","aggregate","output","workers","memoize","dataType","input","task","resolve","reject","then","results","catch","error","messsage","Promise","hamstersTask","onSuccess","onError","hamsters","module","exports","majorVersion","minorVersion","patchVersion","hamstersVersion","debug","importScripts","browser","isBrowser","isWebWorker","node","isNode","reactNative","isReactNative","shell","isShell","transferable","supportstransferableObjects","atomics","supportsAtomicOperations","proxies","supportsProxies","isIE10","isInternetExplorer","hamsterWheel","selectHamsterWheel","sharedWorker","locateSharedWorkerObject","locateBlobBuilder","isLegacyEnvironment","legacyWheel","Worker","locateWorkerObject","determineGlobalThreads","max","navigator","hardwareConcurrency","isFirefox","os","cpus","userAgent","SharedWorker","window","RegExp","isNaN","test","process","product","isLegacy","supportsSharedWorkers","supports","workerBlob","generateWorkerBlob","SharedHamster","e","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","textContent","Blob","BlobMaker","blob","append","type","getBlob","workerLogic","URL","createObjectURL","createDataBlob","String","Uint8Array","SharedArrayBuffer","Proxy","regular","hamstersHabitat","wheel","worker","workerScaffold","regularScaffold","legacyScaffold","self","rtn","addEventListener","incomingConnection","port","ports","start","incomingMessage","eval","postMessage","onmessage","message","putHamsterToWork","Function","returnResponse","typedArrayFromBuffer","prepareTransferBuffers","buffer","types","Uint32Array","Uint16Array","Uint8ClampedArray","Int32Array","Int16Array","Int8Array","Float32Array","Float64Array","buffers","forEach","item","push","Array","isArray","ArrayBuffer","global","hamstersWheel","running","pending","fetchHamster","grabHamster","array","arguments","hamster","runTask","threadId","spawnHamster","parentPort","threadArray","hamsterFood","hasOwnProperty","prepareMeal","registerTask","keepTrackOfThread","trainHamster","feedHamster","addWorkToPending","getOutput","sort","sortOutput","splice","onThreadResponse","removeFromRunning","JSON","parse","returnOutputAndRemoveTask","processQueue","shift","terminate","onmessageerror","onerror","once","threadArrays","splitArrays","i","hamsterPool","randomArray","aggregateArrays","aggregateThreadOutputs","splitArrayIntoSubArrays","processDataType","sortArray","prepareOutput","prepareFunction","messageWorker","stringify","preparedTransfer","functionBody","functionString","substring","arr","order","prototype","call","a","b","reverse","Math","round","random","reduce","concat","len","bufferLength","offset","set","n","size","ceil","slice","subarray","hamstersData","logBook","warning","infoLog","warningLog","errorLog","errorFromThread","saveLogEntry","saveToLogBook","getLogEntries","fetchLogBook","createAndSaveStampedMessage","generateTimeStampedMessage","searchLogEntries","searchLogBook","timeStampedMessage","console","warn","record","Date","now","errorMessage","lineno","filename","eventType","logBookEntries","searchString","searchResults","eventTypeResults","tmpEntries","findStringInLogBook","finalResults","findStringInLogBookAllTypes","total","hamstersLogger","maxCacheEntries","cacheEntries","itemCached","isItemCached","fetchItem","fetchItemFromCache","saveItem","saveItemToCache","method","fn","cacheItem","cachedResult","itemToCache","cachedItems","hamstersMemoizer"],"mappings":"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AkB,WAAlB,IAAiC,OAAOA,OAAOC,OAAd,KAA0B,WAA9D,EAA2E;AACzED,UAAOC,OAAP,GAAiB2E,eAAjB;AACD,E;;;;;;;AC3OD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC;;AAErC;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;ACvLtC;;AAEA;;;;;;;;;AASA;;;;;;KAGMC,K;;AAEJ;;;;AAIA,oBAAc;AAAA;;AACZ,UAAKC,MAAL,GAAc,KAAKC,cAAnB;AACA,UAAKJ,OAAL,GAAe,KAAKK,eAApB;AACA,UAAKxH,MAAL,GAAc,KAAKyH,cAAnB;AACD;;AAED;;;;;;;sCAGiB;AACfC,YAAK/G,MAAL,GAAc,EAAd;AACA+G,YAAKC,GAAL,GAAW,EAAX;;AAEAC,wBAAiB,SAAjB,EAA4B,UAACC,kBAAD,EAAwB;AAClD,aAAIC,OAAOD,mBAAmBE,KAAnB,CAAyB,CAAzB,CAAX;AACAD,cAAKE,KAAL;AACAF,cAAKF,gBAAL,CAAsB,SAAtB,EAAiC,UAACK,eAAD,EAAqB;AACpDtH,oBAASsH,gBAAgB9I,IAAzB;AACAwI,iBAAM;AACJxI,mBAAM,EADF;AAEJsC,uBAAUd,OAAOc;AAFb,YAAN;AAIAyG,gBAAK,MAAMvH,OAAOE,WAAb,GAA2B,GAAhC;AACAiH,gBAAKK,WAAL,CAAiBR,GAAjB;AACD,UARD,EAQG,KARH;AASD,QAZD,EAYG,KAZH;AAaD;;AAED;;;;;;uCAGkB;AAChBD,YAAK/G,MAAL,GAAc,EAAd;AACA+G,YAAKC,GAAL,GAAW,EAAX;;AAEAD,YAAKU,SAAL,GAAiB,UAASC,OAAT,EAAkB;AACjC1H,kBAAS0H,QAAQlJ,IAAjB;AACAwI,eAAM;AACJxI,iBAAM,EADF;AAEJsC,qBAAW,OAAOd,OAAOc,QAAd,KAA2B,WAA3B,GAAyCd,OAAOc,QAAhD,GAA2D;AAFlE,UAAN;AAIA6G;AACD,QAPD;;AASA,WAAIA,mBAAmB,SAAnBA,gBAAmB,GAAW;AAChC,aAAIC,QAAJ,CAAa5H,OAAOE,WAApB;AACA2H,wBAAeb,GAAf;AACD,QAHD;;AAKA,WAAIa,iBAAiB,SAAjBA,cAAiB,CAASb,GAAT,EAAc;AACjC,aAAGA,IAAIlG,QAAP,EAAiB;AACfkG,eAAIxI,IAAJ,GAAWsJ,qBAAqBd,IAAIlG,QAAzB,EAAmCkG,IAAIxI,IAAvC,CAAX;AACAuJ,kCAAuBf,GAAvB,EAA4B,EAA5B;AACD,UAHD,MAGO;AACL,kBAAOQ,YAAYR,GAAZ,CAAP;AACD;AACF,QAPD;;AASA,WAAIc,uBAAuB,SAAvBA,oBAAuB,CAAShH,QAAT,EAAmBkH,MAAnB,EAA2B;AACpD,aAAIC,QAAQ;AACV,qBAAUC,WADA;AAEV,qBAAUC,WAFA;AAGV,oBAAS9B,UAHC;AAIV,2BAAgB+B,iBAJN;AAKV,oBAASC,UALC;AAMV,oBAASC,UANC;AAOV,mBAAQC,SAPE;AAQV,sBAAWC,YARD;AASV,sBAAWC;AATD,UAAZ;AAWA,aAAI,CAACR,MAAMnH,QAAN,CAAL,EAAsB;AACpB,kBAAOkH,MAAP;AACD;AACD,gBAAO,IAAIC,MAAMnH,QAAN,CAAJ,CAAoBkH,MAApB,CAAP;AACD,QAhBD;;AAkBA,WAAID,yBAAyB,SAAzBA,sBAAyB,CAASf,GAAT,EAAc0B,OAAd,EAAuB;AAClDhJ,gBAAOC,IAAP,CAAYqH,GAAZ,EAAiB2B,OAAjB,CAAyB,UAAS/I,GAAT,EAAc;AACrC,eAAIgJ,OAAO5B,IAAIpH,GAAJ,CAAX;AACA,eAAG,OAAOgJ,KAAKZ,MAAZ,KAAuB,WAA1B,EAAuC;AACrCU,qBAAQG,IAAR,CAAaD,KAAKZ,MAAlB;AACD,YAFD,MAEO;AACL,iBAAGc,MAAMC,OAAN,CAAc/B,IAAIpH,GAAJ,CAAd,KAA2B,OAAOoJ,WAAP,KAAuB,WAArD,EAAkE;AAChEN,uBAAQG,IAAR,CAAa,IAAIG,WAAJ,CAAgBhC,IAAIpH,GAAJ,CAAhB,CAAb;AACD;AACF;AACF,UATD;AAUA,gBAAO4H,YAAYR,GAAZ,EAAiB0B,OAAjB,CAAP;AACD,QAZD;AAaD;;AAID;;;;;;oCAGejC,e,EAAiBzG,M,EAAQiB,O,EAASC,M,EAAQ;AACvD,WAAI8F,MAAM;AACRxI,eAAM,EADE;AAERsC,mBAAWd,OAAO,UAAP,KAAsB;AAFzB,QAAV;AAIA,WAAGyG,gBAAgB/D,WAAhB,IAA+B+D,gBAAgBjE,IAAlD,EAAwD;AACtDuE,cAAKC,GAAL,GAAWA,GAAX;AACD;AACD,WAAGP,gBAAgBjE,IAAnB,EAAyB;AACvByG,gBAAOjC,GAAP,GAAaA,GAAb;AACD;AACDhH,cAAOE,WAAP;AACAe,eAAQ+F,GAAR;AACD;;;;;;AAEF;;AAED,KAAIkC,gBAAgB,IAAIxC,KAAJ,EAApB;;AAEA,KAAG,OAAO7E,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,OAAOC,OAAd,KAA0B,WAA9D,EAA2E;AACzED,UAAOC,OAAP,GAAiBoH,aAAjB;AACD,E;;;;;;;ACzID;;AAEA;;;;;;;;;AASA;;;;AAEA;;;;AACA;;;;AACA;;;;;;;;KAEMzK,I;;AAEJ;;;;AAIA,mBAAc;AAAA;;AACZ,UAAK6B,KAAL,GAAa,EAAb;AACD,UAAKG,OAAL,GAAe,EAAf;AACC,UAAK0I,OAAL,GAAe,EAAf;AACA,UAAKC,OAAL,GAAe,EAAf;AACA,UAAKC,YAAL,GAAoB,KAAKC,WAAzB;AACD;;AAED;;;;;;;;;;;;;sCASiBC,K,EAAOvI,I,EAAM1B,W,EAAaoH,K,EAAOzF,O,EAASC,M,EAAQ;AAClE,YAAKkI,OAAL,CAAaP,IAAb,CAAkBW,SAAlB;AACA;;AAED;;;;;;;kCAIaZ,I,EAAMa,O,EAAS;AAC3B,cAAO,KAAKC,OAAL,CAAaD,OAAb,EAAsBb,KAAK,CAAL,CAAtB,EAA+BA,KAAK,CAAL,CAA/B,EAAwCA,KAAK,CAAL,CAAxC,EAAiDA,KAAK,CAAL,CAAjD,EAA0DA,KAAK,CAAL,CAA1D,CAAP;AACA;;AAED;;;;;;;;;iCAMYe,Q,EAAU;AACpB,WAAG,kBAAgBrK,WAAnB,EAAgC;AAC9B,gBAAO,KAAKmB,OAAL,CAAakJ,QAAb,CAAP;AACD;AACD,cAAO,KAAKC,YAAL,EAAP;AACD;;AAED;;;;;;;;uCAKkB5I,I,EAAMX,E,EAAI;AAC1BW,YAAKJ,OAAL,CAAaiI,IAAb,CAAkBxI,EAAlB,EAD0B,CACH;AACvB,YAAK8I,OAAL,CAAaN,IAAb,CAAkBxI,EAAlB,EAF0B,CAEH;AACxB;;AAED;;;;;;;kCAIaA,E,EAAI;AACf,YAAKC,KAAL,CAAWuI,IAAX,CAAgBxI,EAAhB;AACD;;AAED;;;;;;;;mCAKcb,U,EAAY;AACxB,YAAKA,UAAL,EAAiBA,aAAa,CAA9B,EAAiCA,YAAjC,EAA+C;AAC7C,cAAKiB,OAAL,CAAaoI,IAAb,CAAkB,KAAKe,YAAL,EAAlB;AACD;AACF;;AAED;;;;;;;oCAIe;AACb,WAAI,kBAAgBzJ,SAApB,EAA+B;AAC7B,gBAAO,IAAI,kBAAgBoE,YAApB,CAAiC,kBAAgBjB,YAAjD,EAA+D,oBAA/D,CAAP;AACD;AACD,WAAG,kBAAgBd,IAAhB,IAAwB,OAAO,kBAAgBqH,UAAvB,KAAsC,WAAjE,EAA8E;AAC5E,gBAAO,IAAI,kBAAgBhG,MAApB,CAA2B,kBAAgBP,YAA3C,CAAP;AACD;AACD,cAAO,IAAI,kBAAgBO,MAApB,CAA2B,kBAAgBP,YAA3C,CAAP;AACD;;AAED;;;;;;;;;iCAMYwG,W,EAAa9I,I,EAAM;AAC7B,WAAI+I,cAAc;AACjBR,gBAAOO;AADU,QAAlB;AAGA,YAAK,IAAIlK,GAAT,IAAgBoB,KAAKD,KAArB,EAA4B;AAC1B,aAAIC,KAAKD,KAAL,CAAWiJ,cAAX,CAA0BpK,GAA1B,KAAkC,CAAC,OAAD,EAAU,SAAV,EAAqBC,OAArB,CAA6BD,GAA7B,MAAsC,CAAC,CAA7E,EAAgF;AAC9EmK,uBAAYnK,GAAZ,IAAmBoB,KAAKD,KAAL,CAAWnB,GAAX,CAAnB;AACD;AACF;AACD,cAAOmK,WAAP;AACD;;AAED;;;;;;;;;;;;6BASQN,O,EAASF,K,EAAOvI,I,EAAMC,O,EAASC,M,EAAQ;AAC9C,WAAIyI,WAAW,KAAKR,OAAL,CAAa5I,MAA5B;AACC,WAAIwJ,cAAc,KAAKE,WAAL,CAAiBV,KAAjB,EAAwBvI,IAAxB,CAAlB;AACA,YAAKkJ,YAAL,CAAkBlJ,KAAKX,EAAvB;AACA,YAAK8J,iBAAL,CAAuBnJ,IAAvB,EAA6B2I,QAA7B;AACA,WAAG,kBAAgBtK,MAAnB,EAA2B;AACzB,2BAAgBuE,WAAhB,oBAA6CmG,WAA7C,EAA0D9I,OAA1D,EAAmEC,MAAnE;AACD,QAFD,MAEO;AACL,cAAKkJ,YAAL,CAAkB,IAAlB,qBAAyCpJ,KAAKR,KAA9C,EAAqDQ,IAArD,EAA2DyI,OAA3D,EAAoExI,OAApE,EAA6EC,MAA7E;AACA,wBAAamJ,WAAb,oBAA0CZ,OAA1C,EAAmDM,WAAnD;AACD;AACD/I,YAAKR,KAAL,IAAc,CAAd,CAX6C,CAW5B;AAClB;;AAED;;;;;;;;;;;;kCASa+I,K,EAAOvI,I,EAAMC,O,EAASC,M,EAAQ;AACzC,WAAG,kBAAgB1B,UAAhB,KAA+B,KAAK2J,OAAL,CAAa5I,MAA/C,EAAuD;AACrD,gBAAO,KAAK+J,gBAAL,CAAsBf,KAAtB,EAA6BvI,IAA7B,EAAmCC,OAAnC,EAA4CC,MAA5C,CAAP;AACD;AACD,WAAIuI,UAAU,KAAKH,WAAL,CAAiB,KAAKH,OAAL,CAAa5I,MAA9B,CAAd;AACA,cAAO,KAAKmJ,OAAL,CAAaD,OAAb,EAAsBF,KAAtB,EAA6BvI,IAA7B,EAAmCC,OAAnC,EAA4CC,MAA5C,CAAP;AACD;;AAED;;;;;;;;+CAK0BF,I,EAAMC,O,EAAS;AACvC,WAAIN,SAAS,eAAa4J,SAAb,CAAuBvJ,IAAvB,EAA6B,kBAAgB8B,YAA7C,CAAb;AACA,WAAI9B,KAAKwJ,IAAT,EAAe;AACb7J,kBAAS,eAAa8J,UAAb,CAAwB9J,MAAxB,EAAgCK,KAAKwJ,IAArC,CAAT;AACD;AACDvJ,eAAQN,MAAR;AACA,YAAKL,KAAL,CAAWU,KAAKX,EAAhB,IAAsB,IAAtB,CANuC,CAMX;AAC7B;;;uCAEiBW,I,EAAM2I,Q,EAAU;AAChC,YAAKR,OAAL,CAAauB,MAAb,CAAoB,KAAKvB,OAAL,CAAatJ,OAAb,CAAqB8J,QAArB,CAApB,EAAoD,CAApD,EADgC,CACwB;AACxD3I,YAAKJ,OAAL,CAAa8J,MAAb,CAAoB1J,KAAKJ,OAAL,CAAaf,OAAb,CAAqB8J,QAArB,CAApB,EAAoD,CAApD,EAFgC,CAEwB;AACzD;;AAED;;;;;;;;;;;;kCASalL,I,EAAMF,O,EAASoL,Q,EAAU3I,I,EAAMyI,O,EAASxI,O,EAASC,M,EAAQ;AACpE,WAAIyJ,mBAAmB,SAAnBA,gBAAmB,CAASjD,OAAT,EAAkB;AACvCjJ,cAAKmM,iBAAL,CAAuB5J,IAAvB,EAA6B2I,QAA7B;AACA,aAAG,OAAOjC,QAAQlJ,IAAR,CAAaA,IAApB,KAA6B,WAAhC,EAA6C;AAC3CwC,gBAAKL,MAAL,CAAYgJ,QAAZ,IAAwBjC,QAAQlJ,IAAR,CAAaA,IAArC;AACD,UAFD,MAEO;AACLwC,gBAAKL,MAAL,CAAYgJ,QAAZ,IAAyBpL,QAAQmE,WAAR,GAAsBmI,KAAKC,KAAL,CAAWpD,QAAQlJ,IAAnB,CAAtB,GAAiDkJ,QAAQlJ,IAAlF;AACD;AACD,aAAIwC,KAAKJ,OAAL,CAAaL,MAAb,KAAwB,CAAxB,IAA6BS,KAAKR,KAAL,KAAeQ,KAAKP,OAArD,EAA8D;AAC5DhC,gBAAKsM,yBAAL,CAA+B/J,IAA/B,EAAqCC,OAArC;AACD;AACD,aAAIxC,KAAK2K,OAAL,CAAa7I,MAAb,KAAwB,CAA5B,EAA+B;AAC7B,kBAAO9B,KAAKuM,YAAL,CAAkBvM,KAAK2K,OAAL,CAAa6B,KAAb,EAAlB,EAAwCxB,OAAxC,CAAP;AACD;AACD,aAAI,CAAClL,QAAQe,WAAT,IAAwB,CAACf,QAAQ4B,SAArC,EAAgD;AAC9CsJ,mBAAQyB,SAAR,GAD8C,CACzB;AACtB;AACF,QAhBD;AAiBA,WAAI3M,QAAQ4B,SAAZ,EAAuB;AACrBsJ,iBAAQtC,IAAR,CAAaM,SAAb,GAAyBkD,gBAAzB;AACAlB,iBAAQtC,IAAR,CAAagE,cAAb,GAA8BjK,MAA9B;AACAuI,iBAAQtC,IAAR,CAAaiE,OAAb,GAAuBlK,MAAvB;AACD,QAJD,MAIO,IAAG3C,QAAQiE,IAAX,EAAiB;AACtBiH,iBAAQ4B,IAAR,CAAa,SAAb,EAAwBV,gBAAxB;AACAlB,iBAAQ4B,IAAR,CAAa,gBAAb,EAA+BnK,MAA/B;AACAuI,iBAAQ4B,IAAR,CAAa,OAAb,EAAsBnK,MAAtB;AACD,QAJM,MAIA;AACLuI,iBAAQhC,SAAR,GAAoBkD,gBAApB;AACAlB,iBAAQ0B,cAAR,GAAyBjK,MAAzB;AACAuI,iBAAQnI,KAAR,GAAgBJ,MAAhB;AACD;AACF;;AAED;;;;;;;;;;kCAOaF,I,EAAM;AAAA;;AAClB,cAAO,IAAIQ,OAAJ,CAAY,UAACP,OAAD,EAAUC,MAAV,EAAqB;AACrC,aAAIoK,eAAe,EAAnB;AACA,aAAGtK,KAAKD,KAAL,CAAWwI,KAAX,IAAoBvI,KAAKP,OAAL,KAAiB,CAAxC,EAA2C;AACzC6K,0BAAe,eAAaC,WAAb,CAAyBvK,KAAKD,KAAL,CAAWwI,KAApC,EAA2CvI,KAAKP,OAAhD,CAAf,CADyC,CACgC;AAC1E;AACD,aAAI+K,IAAI,CAAR;AACA,gBAAOA,IAAIxK,KAAKP,OAAhB,EAAyB;AACxB,eAAG6K,gBAAgBtK,KAAKP,OAAL,KAAiB,CAApC,EAAuC;AACrC,mBAAK6C,YAAL,CAAkBgI,aAAaE,CAAb,CAAlB,EAAmCxK,IAAnC,EAAyCC,OAAzC,EAAkDC,MAAlD;AACF,YAFA,MAEM;AACJ,mBAAKoC,YAAL,CAAkBtC,KAAKD,KAAL,CAAWwI,KAA7B,EAAoCvI,IAApC,EAA0CC,OAA1C,EAAmDC,MAAnD;AACF;AACCsK,gBAAK,CAAL;AACD;AACF,QAdK,CAAP;AAeA;;;;;;AAGH,KAAIC,cAAc,IAAIhN,IAAJ,EAAlB;;AAEA,KAAG,OAAOoD,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,OAAOC,OAAd,KAA0B,WAA9D,EAA2E;AACzED,UAAOC,OAAP,GAAiB2J,WAAjB;AACD,E;;;;;;ACjQD;;AAEA;;;;;;;;;AASA;;;;AAEA;;;;;;;;KAEMjN,I;;AAEJ;;;;AAIA,mBAAc;AAAA;;AACZ,UAAKkN,WAAL,GAAmB,KAAKA,WAAxB;AACA,UAAKC,eAAL,GAAuB,KAAKC,sBAA5B;AACA,UAAKL,WAAL,GAAmB,KAAKM,uBAAxB;AACA,UAAKC,eAAL,GAAuB,KAAKhE,oBAA5B;AACA,UAAK2C,UAAL,GAAkB,KAAKsB,SAAvB;AACA,UAAKxB,SAAL,GAAiB,KAAKyB,aAAtB;AACA,UAAK5L,UAAL,GAAkB,KAAK6L,eAAvB;AACA,UAAK5B,WAAL,GAAmB,KAAK6B,aAAxB;AACD;;AAED;;;;;;;;;mCAKczF,e,EAAiBgD,O,EAASM,W,EAAa;AACnD,WAAGtD,gBAAgB/D,WAAnB,EAAgC;AAC9B,gBAAO+G,QAAQjC,WAAR,CAAoBqD,KAAKsB,SAAL,CAAepC,WAAf,CAApB,CAAP;AACD;AACD,WAAItD,gBAAgBtG,SAApB,EAA+B;AAC7B,gBAAOsJ,QAAQtC,IAAR,CAAaK,WAAb,CAAyBuC,WAAzB,CAAP;AACD;AACD,WAAIqC,mBAAmB,KAAKrE,sBAAL,CAA4BgC,WAA5B,EAAyC,EAAzC,CAAvB;AACA,cAAON,QAAQjC,WAAR,CAAoB4E,iBAAiB,aAAjB,CAApB,EAAqDA,iBAAiB,SAAjB,CAArD,CAAP;AACD;;AAED;;;;;;;4CAIuBrC,W,EAAarB,O,EAAS;AAC3ChJ,cAAOC,IAAP,CAAYoK,WAAZ,EAAyBpB,OAAzB,CAAiC,UAAS/I,GAAT,EAAc;AAC7C,aAAIgJ,OAAOmB,YAAYnK,GAAZ,CAAX;AACA,aAAG,OAAOgJ,KAAKZ,MAAZ,KAAuB,WAA1B,EAAuC;AACrCU,mBAAQG,IAAR,CAAaD,KAAKZ,MAAlB;AACD,UAFD,MAEO;AACL,eAAGc,MAAMC,OAAN,CAAcgB,YAAYnK,GAAZ,CAAd,KAAmC,OAAOoJ,WAAP,KAAuB,WAA7D,EAA0E;AACxEN,qBAAQG,IAAR,CAAa,IAAIG,WAAJ,CAAgBe,YAAYnK,GAAZ,CAAhB,CAAb;AACD;AACF;AACF,QATD;AAUA,cAAO;AACLmK,sBAAaA,WADR;AAELrB,kBAASA;AAFJ,QAAP;AAID;;AAED;;;;;;;qCAIgB2D,Y,EAAc;AAC5B,WAAIC,iBAAiBlG,OAAOiG,YAAP,CAArB;AACA,cAAOC,eAAeC,SAAf,CAA0BD,eAAezM,OAAf,CAAuB,GAAvB,IAA8B,CAAxD,EAA6DyM,eAAe/L,MAAf,GAAuB,CAApF,CAAP;AACD;;AAED;;;;;;;mCAIcS,I,EAAM8B,Y,EAAc;AAChC,WAAG9B,KAAKP,OAAL,KAAiB,CAApB,EAAuB;AACrB,gBAAOO,KAAKL,MAAL,CAAY,CAAZ,CAAP;AACD;AACD,WAAGK,KAAKN,SAAR,EAAmB;AACjB,gBAAO,KAAKkL,sBAAL,CAA4B5K,KAAKL,MAAjC,EAAyCK,KAAKF,QAA9C,EAAwDgC,YAAxD,CAAP;AACD,QAFD,MAEO;AACL,gBAAO9B,KAAKL,MAAZ;AACD;AACF;;AAED;;;;;;;;+BAKU6L,G,EAAKC,K,EAAO;AACpB,eAAOA,KAAP;AACE,cAAK,MAAL;AACA,cAAK,KAAL;AACE,kBAAO3D,MAAM4D,SAAN,CAAgBlC,IAAhB,CAAqBmC,IAArB,CAA0BH,GAA1B,EAA+B,UAASI,CAAT,EAAYC,CAAZ,EAAe;AACnD,oBAAQJ,UAAU,KAAV,GAAmBG,IAAIC,CAAvB,GAA6BA,IAAID,CAAzC;AACD,YAFM,CAAP;AAGF,cAAK,UAAL;AACE,kBAAOJ,IAAIhC,IAAJ,EAAP;AACF,cAAK,WAAL;AACE,kBAAOgC,IAAIM,OAAJ,EAAP;AACF;AACE,kBAAON,GAAP;AAXJ;AAaD;;AAED;;;;;;;;0CAKqB1L,Q,EAAUkH,M,EAAQ;AACrC,WAAMC,QAAQ;AACZ,mBAAUC,WADE;AAEZ,mBAAUC,WAFE;AAGZ,kBAAS9B,UAHG;AAIZ,yBAAgB+B,iBAJJ;AAKZ,kBAASC,UALG;AAMZ,kBAASC,UANG;AAOZ,iBAAQC,SAPI;AAQZ,oBAAWC,YARC;AASZ,oBAAWC;AATC,QAAd;AAWA,WAAG,CAACR,MAAMnH,QAAN,CAAJ,EAAqB;AACnB,gBAAOkH,MAAP;AACD;AACD,cAAO,IAAIC,MAAMnH,QAAN,CAAJ,CAAoBkH,MAApB,CAAP;AACD;;AAED;;;;;;;;iCAKYxH,K,EAAOkB,S,EAAW;AAC5B,WAAIgK,cAAc,EAAlB;AACA,cAAMlL,QAAQ,CAAd,EAAiB;AACfkL,qBAAY7C,IAAZ,CAAiBkE,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiB,MAAM,CAAvB,IAA4B,CAAvC,CAAjB;AACAzM,kBAAS,CAAT;AACD;AACDkB,iBAAUgK,WAAV;AACD;;AAED;;;;;;;;4CAKuB3K,K,EAAOD,Q,EAAUgC,Y,EAAc;AACpD,WAAG,CAAChC,QAAD,IAAa,CAACgC,YAAjB,EAA+B;AAC7B,gBAAO/B,MAAMmM,MAAN,CAAa,UAASN,CAAT,EAAYC,CAAZ,EAAe;AACjC,kBAAOD,EAAEO,MAAF,CAASN,CAAT,CAAP;AACD,UAFM,CAAP;AAGD;AACD,WAAIrB,IAAI,CAAR;AACA,WAAI4B,MAAMrM,MAAMR,MAAhB;AACA,WAAI8M,eAAe,CAAnB;AACA,YAAK7B,CAAL,EAAQA,IAAI4B,GAAZ,EAAiB5B,KAAK,CAAtB,EAAyB;AACvB6B,yBAAgBtM,MAAMyK,CAAN,EAASjL,MAAzB;AACD;AACD,WAAII,SAAS,KAAKmL,eAAL,CAAqBhL,QAArB,EAA+BuM,YAA/B,CAAb;AACA,WAAIC,SAAS,CAAb;AACA,YAAK9B,IAAI,CAAT,EAAYA,IAAI4B,GAAhB,EAAqB5B,KAAK,CAA1B,EAA6B;AAC3B7K,gBAAO4M,GAAP,CAAWxM,MAAMyK,CAAN,CAAX,EAAqB8B,MAArB;AACAA,mBAAUvM,MAAMyK,CAAN,EAASjL,MAAnB;AACD;AACD,cAAOI,MAAP;AACD;;AAED;;;;;;;;6CAKwB4I,K,EAAOiE,C,EAAG;AAChC,WAAIhC,IAAI,CAAR;AACA,WAAIF,eAAe,EAAnB;AACA,WAAImC,OAAOV,KAAKW,IAAL,CAAUnE,MAAMhJ,MAAN,GAAaiN,CAAvB,CAAX;AACA,WAAGjE,MAAMoE,KAAT,EAAgB;AACd,gBAAMnC,IAAIjC,MAAMhJ,MAAhB,EAAwB;AACtB+K,wBAAazC,IAAb,CAAkBU,MAAMoE,KAAN,CAAYnC,CAAZ,EAAeA,KAAKiC,IAApB,CAAlB;AACD;AACF,QAJD,MAIO;AACL,gBAAOjC,IAAIjC,MAAMhJ,MAAjB,EAAyB;AACvB+K,wBAAazC,IAAb,CAAkBU,MAAMqE,QAAN,CAAepC,CAAf,EAAkBA,KAAKiC,IAAvB,CAAlB;AACD;AACF;AACD,cAAOnC,YAAP;AACD;;;;;;AAGH,KAAIuC,eAAe,IAAIrP,IAAJ,EAAnB;;AAEA,KAAG,OAAOqD,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,OAAOC,OAAd,KAA0B,WAA9D,EAA2E;AACzED,UAAOC,OAAP,GAAiB+L,YAAjB;AACD,E;;;;;;AC3MD;;AAEA;;;;;;;;;AASA;;;;AAEA;;;;;;;;KAEMnP,M;;AAEJ;;;;AAIA,qBAAc;AAAA;;AACZ,UAAKoP,OAAL,GAAe;AACbxM,cAAO,EADM;AAEbyM,gBAAS,EAFI;AAGbtO,aAAM;AAHO,MAAf;AAKA,UAAKA,IAAL,GAAY,KAAKuO,OAAjB;AACA,UAAKD,OAAL,GAAe,KAAKE,UAApB;AACA,UAAK3M,KAAL,GAAa,KAAK4M,QAAlB;AACA,UAAKC,eAAL,GAAuB,KAAKA,eAA5B;AACA,UAAKC,YAAL,GAAoB,KAAKC,aAAzB;AACA,UAAKC,aAAL,GAAqB,KAAKC,YAA1B;AACA,UAAKC,2BAAL,GAAmC,KAAKC,0BAAxC;AACA,UAAKC,gBAAL,GAAwB,KAAKC,aAA7B;AACD;;;;6BAEOjH,O,EAAS;AACf,WAAIkH,qBAAqB,KAAKJ,2BAAL,CAAiC,MAAjC,EAAyC9G,OAAzC,CAAzB;AACAmH,eAAQpP,IAAR,CAAamP,kBAAb;AACD;;;gCAEUlH,O,EAAS;AAClB,WAAIkH,qBAAqB,KAAKJ,2BAAL,CAAiC,SAAjC,EAA4C9G,OAA5C,CAAzB;AACAmH,eAAQC,IAAR,CAAaF,kBAAb;AACD;;;8BAEQlH,O,EAASxG,M,EAAQ;AACxB,WAAI0N,qBAAqB,KAAKJ,2BAAL,CAAiC,OAAjC,EAA0C9G,OAA1C,CAAzB;AACAmH,eAAQvN,KAAR,CAAcsN,kBAAd;AACA,WAAG1N,MAAH,EAAW;AACTA,gBAAO0N,kBAAP;AACD,QAFD,MAEO;AACL,gBAAOA,kBAAP;AACD;AACF;;;gDAE0B9I,I,EAAM4B,O,EAAS;AACxC,WAAIqH,qDAA4CjJ,IAA5C,UAAqD4B,OAArD,WAAkEsH,KAAKC,GAAL,EAAtE;AACA,YAAKb,YAAL,CAAkBtI,KAAKhG,WAAL,EAAlB,EAAsCiP,MAAtC;AACA,cAAOA,MAAP;AACD;;;qCAEezN,K,EAAOJ,M,EAAQ;AAC7B,WAAIgO,qBAAmB5N,MAAM6N,MAAzB,YAAsC7N,MAAM8N,QAA5C,UAAyD9N,MAAMoG,OAAnE;AACA,YAAKwG,QAAL,CAAcgB,YAAd,EAA4BhO,MAA5B;AACD;;;mCAEamO,S,EAAW3H,O,EAAS;AAChC,YAAKoG,OAAL,CAAauB,SAAb,EAAwBxG,IAAxB,CAA6BnB,OAA7B;AACD;;;kCAEY2H,S,EAAW;AACtB,WAAGA,SAAH,EAAc;AACZ,gBAAO,KAAKvB,OAAL,CAAauB,SAAb,CAAP;AACD;AACD,cAAO,KAAKvB,OAAZ;AACD;;;yCAEmBwB,c,EAAgBC,Y,EAAc;AAChD,WAAIC,gBAAgB,EAApB;AACA,WAAIhE,IAAI,CAAR;AACA,YAAKA,CAAL,EAAQA,IAAI8D,eAAe/O,MAA3B,EAAmCiL,GAAnC,EAAwC;AACtC,aAAG8D,eAAe9D,CAAf,EAAkB3L,OAAlB,CAA0B0P,YAA1B,MAA4C,CAAC,CAAhD,EAAmD;AACjDC,yBAAc3G,IAAd,CAAmByG,eAAe9D,CAAf,CAAnB;AACD;AACF;AACD,cAAOgE,aAAP;AACD;;;iDAE2B1B,O,EAASyB,Y,EAAc;AACjD,WAAIC,gBAAgB,EAApB;AACA,WAAI5P,YAAJ;AAAA,WAAS6P,yBAAT;AAAA,WAA2BC,aAAa,IAAxC;AACA,YAAI9P,GAAJ,IAAWkO,OAAX,EAAoB;AAClB,aAAGA,QAAQ9D,cAAR,CAAuBpK,GAAvB,CAAH,EAAgC;AAC9B8P,wBAAa5B,QAAQlO,GAAR,CAAb;AACA6P,8BAAmB,KAAKE,mBAAL,CAAyBD,UAAzB,EAAqCH,YAArC,CAAnB;AACA,gBAAK,IAAI/D,IAAIiE,iBAAiBlP,MAAjB,GAA0B,CAAvC,EAA0CiL,KAAK,CAA/C,EAAkDA,GAAlD,EAAuD;AACrDgE,2BAAc3G,IAAd,CAAmB4G,iBAAiBjE,CAAjB,CAAnB;AACD;AACF;AACF;AACD,cAAOgE,aAAP;AACD;;;mCAEaD,Y,EAAcF,S,EAAW;AACrC,WAAIO,eAAe,EAAnB;AACA,WAAGP,SAAH,EAAc;AACZO,wBAAe,KAAKD,mBAAL,CAAyB,KAAK7B,OAAL,CAAauB,SAAb,CAAzB,EAAkDE,YAAlD,CAAf;AACD,QAFD,MAEO;AACLK,wBAAe,KAAKC,2BAAL,CAAiC,KAAK/B,OAAtC,EAA+CyB,YAA/C,CAAf;AACD;AACD,cAAO;AACLO,gBAAOF,aAAarP,MADf;AAELa,kBAASwO;AAFJ,QAAP;AAID;;;;;;AAGH,KAAIG,iBAAiB,IAAIrR,MAAJ,EAArB;;AAEA,KAAG,OAAOmD,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,OAAOC,OAAd,KAA0B,WAA9D,EAA2E;AACzED,UAAOC,OAAP,GAAiBiO,cAAjB;AACD,E;;;;;;AC3HD;;AAEA;;;;;;;;;AASA;;;;;;KAEMpR,Q;;AAEJ;;;;AAIA,uBAAc;AAAA;;AACZ,UAAKqR,eAAL,GAAuB,EAAvB;AACA,UAAKC,YAAL,GAAoB,EAApB;AACA,UAAKC,UAAL,GAAkB,KAAKC,YAAvB;AACA,UAAKC,SAAL,GAAiB,KAAKC,kBAAtB;AACA,UAAKC,QAAL,GAAgB,KAAKC,eAArB;AACD;;AAED;;;;;;;;;;kCAMaxP,K,EAAOyP,M,EAAQ;AAC3B,cAAO,CAAC,CAAE,KAAKJ,SAAL,CAAe,EAACK,IAAID,MAAL,EAAahS,MAAMuC,KAAnB,EAAf,CAAH,IAAiD,KAAxD;AACA;;AAED;;;;;;;;wCAKmB2P,S,EAAW;AAC7B,WAAIC,eAAe,IAAnB;AACC,WAAI/Q,MAAM,IAAV;AAF4B;AAAA;AAAA;;AAAA;AAG5B,8BAAWF,OAAOC,IAAP,CAAY,KAAKsQ,YAAjB,CAAX,8HAA2C;AAAvCrQ,cAAuC;;AACzC,eAAI8Q,UAAU9Q,GAAV,EAAe6Q,EAAf,KAAsBC,UAAUD,EAAjC,IAAyCC,UAAU9Q,GAAV,EAAemB,KAAf,KAAyB2P,UAAUlS,IAA/E,EAAsF;AACpFmS,4BAAeD,UAAU9Q,GAAV,EAAemB,KAA9B;AACD;AACF;AAP2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQ7B,cAAO4P,gBAAgB,KAAvB;AACA;;AAED;;;;;;;;qCAKgBH,M,EAAQhS,I,EAAMwR,e,EAAiB;AAC9C,WAAIY,cAAc;AACjBH,aAAID,MADa;AAEjBzP,gBAAOvC;AAFU,QAAlB;AAIA,WAAIqS,cAAc,KAAKZ,YAAvB;AACA,WAAGY,YAAYtQ,MAAZ,GAAqByP,eAAxB,EAAyC;AACxCa,qBAAYhI,IAAZ,CAAiB+H,WAAjB;AACA,QAFD,MAEO;AACNC,qBAAYnG,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBkG,WAAzB;AACA;AACD,YAAKX,YAAL,GAAoBY,WAApB;AACA;;;;;;AAGH,KAAIC,mBAAmB,IAAInS,QAAJ,EAAvB;;AAEA,KAAG,OAAOkD,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,OAAOC,OAAd,KAA0B,WAA9D,EAA2E;AACzED,UAAOC,OAAP,GAAiBgP,gBAAjB;AACD,E","file":"hamsters.web.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 96860aae3fdbada7b30e","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nimport hamstersVersion from './core/version';\nimport hamstersHabitat from './core/habitat';\nimport hamstersPool from './core/pool';\nimport hamstersData from './core/data';\nimport hamstersLogger from './core/logger';\nimport hamstersMemoizer from './core/memoizer';\n\nclass hamstersjs {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.version = hamstersVersion;\n    this.init = this.initializeLibrary;\n    this.habitat = hamstersHabitat;\n    this.data = hamstersData;\n    this.pool = hamstersPool;\n    this.logger = hamstersLogger;\n    this.memoizer = hamstersMemoizer;\n    this.scheduleTask = this.scheduleTask;\n    this.run = this.hamstersRun.bind(this);\n    this.promise = this.hamstersPromise.bind(this);\n    this.habitatKeys = [\n      'worker','sharedworker',\n      'legacy','proxies',\n      'reactnative','atomics',\n      'transferable','browser',\n      'shell','node','debug',\n      'persistence','importscripts',\n      'maxThreads', 'parentPort',\n      'webworker',\n    ];\n  }\n\n  /**\n  * @function initializeLibrary - Prepares & initializes Hamsters.js library\n  * @param {object} startOptions - Provided library functionality options\n  */\n  initializeLibrary(startOptions) {\n    this.processStartOptions(startOptions);\n    if(!this.habitat.legacy && this.habitat.persistence === true) {\n      hamstersPool.spawnHamsters(this.habitat.maxThreads);\n    }\n    this.maxThreads = this.habitat.maxThreads;\n    hamstersLogger.info(`Initialized using up to ${this.habitat.maxThreads} threads.`);\n  }\n\n  /**\n  * @function processStartOptions - Adjusts library functionality based on provided options\n  * @param {object} startOptions - Provided library functionality options\n  */\n  processStartOptions(startOptions) {\n    if (typeof startOptions !== 'undefined') {\n      for (var key of Object.keys(startOptions)) {\n        if (this.habitatKeys.indexOf(key.toLowerCase()) !== -1) {\n          this.habitat[key] = startOptions[key];\n        } else {\n          this[key] = startOptions[key];\n        }\n      }\n    }\n    // Ensure legacy mode is disabled when we pass a third party worker library\n    var forceLegacyMode = (typeof startOptions !== 'undefined' && typeof startOptions.legacy !== 'undefined');\n    if(forceLegacyMode) {\n      forceLegacyMode = startOptions.legacy;\n    }\n    if(typeof this.habitat['Worker'] === 'function' && !forceLegacyMode) {\n      this.habitat.legacy = false;\n    }\n  }\n\n  /**\n  * @constructor\n  * @function hamstersTask - Constructs a new task object from provided arguments\n  * @param {object} params - Provided library execution options\n  * @param {function} functionToRun - Function to execute\n  * @return {object} new Hamsters.js task\n  */\n  hamstersTask(params, functionToRun) {\n    params.hamstersJob = ((this.habitat.legacy || this.habitat.webWorker) ? functionToRun : this.data.prepareJob(functionToRun));\n    return {\n      id: this.pool.tasks.length,\n      count: 0,\n      threads: (this.habitat.legacy ? 1 : (params.threads || 1)),\n      aggregate: (params.aggregate || false),\n      output: [],\n      workers: [],\n      memoize: (params.memoize || false),\n      dataType: (params.dataType ? params.dataType : null),\n      input: params\n    };\n  }\n\n  scheduleTask(task, resolve, reject) {\n    return this.pool.scheduleTask(task).then((results) => {\n      resolve(results);\n    }).catch((error) => {\n      this.logger.error(error.messsage, reject);\n    });\n  }\n\n  /**\n  * @async\n  * @function hamstersPromise - Calls library functionality using async promises\n  * @param {object} params - Provided library execution options\n  * @param {function} functionToRun - Function to execute\n  * @return {array} Results from functionToRun.\n  */\n  hamstersPromise(params, functionToRun) {\n    return new Promise((resolve, reject) => {\n      this.scheduleTask(this.hamstersTask(params, functionToRun), resolve, reject);\n    });\n  }\n\n  /**\n  * @async\n  * @function hamstersRun - Calls library functionality using async callbacks\n  * @param {object} params - Provided library execution options\n  * @param {function} functionToRun - Function to execute\n  * @param {function} onSuccess - Function to call upon successful execution\n  * @param {function} onError - Function to call upon execution failure\n  * @return {array} Results from functionToRun.\n  */\n  hamstersRun(params, functionToRun, onSuccess, onError) {\n    this.scheduleTask(this.hamstersTask(params, functionToRun), onSuccess, onError);\n  }\n}\n\nvar hamsters = new hamstersjs();\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsters;\n}\n\n\n// WEBPACK FOOTER //\n// ./hamsters.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nconst majorVersion = 5;\nconst minorVersion = 3;\nconst patchVersion = 5;\nconst hamstersVersion = `${majorVersion}.${minorVersion}.${patchVersion}`;\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersVersion;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/version.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nimport hamstersWheel from './wheel';\n\nclass habitat {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.debug = false;\n    this.importScripts = null;\n    this.memoize = false;\n    this.persistence = true;\n    this.browser = this.isBrowser();\n    this.webWorker = this.isWebWorker();\n    this.node = this.isNode();\n    this.reactNative = this.isReactNative();\n    this.shell = this.isShell();\n    this.transferable = this.supportstransferableObjects();\n    this.atomics = this.supportsAtomicOperations();\n    this.proxies = this.supportsProxies();\n    this.isIE10 = !this.isNode() && !this.isReactNative() && this.isInternetExplorer(10);\n    this.hamsterWheel = this.selectHamsterWheel();\n    this.sharedWorker = this.locateSharedWorkerObject();\n    this.locateBlobBuilder = this.locateBlobBuilder;\n    this.legacy = this.isLegacyEnvironment();\n    this.legacyWheel = hamstersWheel.legacy;\n    this.Worker = this.locateWorkerObject();\n    this.maxThreads = this.determineGlobalThreads();\n  }\n\n  /**\n  * @function determineGlobalThreads - Determines max number of threads to use\n  */\n  determineGlobalThreads() {\n    let max = 4;\n    if(this.browser && typeof navigator.hardwareConcurrency !== \"undefined\") {\n      max = navigator.hardwareConcurrency;\n      if(this.isFirefox()) {\n        max = (max > 20 ? 20 : max);\n      }\n    }\n    if(this.node && typeof os !== 'undefined') {\n      max = os.cpus().length;\n    }\n    return max;\n  }\n\n  /**\n  * @function isFireox - Detect firefox browser\n  */\n  isFirefox() {\n    return (navigator.userAgent.toLowerCase().indexOf('firefox') !== -1);\n  }\n\n  /**\n  * @function locateWorkerObject - Attempts to find a global Worker object\n  */\n  locateWorkerObject() {\n    return (typeof Worker !== 'undefined' ? Worker : false);\n  }\n\n  /**\n  * @function locateSharedWorkerObject - Attempts to find a global SharedWorker object\n  */\n  locateSharedWorkerObject() {\n    return (typeof SharedWorker !== 'undefined' ? SharedWorker : false);\n  }\n\n  /**\n  * @function isBrowser - Detects if execution environment is a browser\n  */\n  isBrowser() {\n    return (typeof window === \"object\");\n  }\n\n  /**\n  * @function isInternetExplorer - Detects if execution environment is internet explorer\n  */\n  isInternetExplorer(version) {\n    return (new RegExp('msie' + (!isNaN(version) ? ('\\\\s'+version) : ''), 'i').test(navigator.userAgent));\n  }\n\n  /**\n  * @function isNode - Detects if execution environment is node.js\n  */\n  isNode() {\n    return (typeof process === \"object\" && typeof require === \"function\" && !this.isWebWorker() && !this.browser);\n  }\n\n  /**\n  * @function isWebWorker - Detects if execution environment is a webworker\n  */\n  isWebWorker() {\n    return (typeof importScripts === \"function\" && !this.isReactNative());\n  }\n\n  /**\n  * @function isReactNative - Detects if execution environment is reactNative\n  */\n  isReactNative() {\n    return (typeof navigator !== \"undefined\" && typeof navigator.product !== \"undefined\" && navigator.product == \"ReactNative\");\n  }\n\n  /**\n  * @function isShell - Detects if execution environment is a shell\n  */\n  isShell() {\n    return ((typeof navigator === \"undefined\") && !this.isNode() && !this.isWebWorker() && !this.isReactNative());\n  }\n\n  /**\n  * @function isLegacyEnvironment - Detects if execution environment is a legacy environment\n  */\n  isLegacyEnvironment() {\n    let isLegacy = !!!this.Worker;\n    // Detect sharedWorker support for use within webworkers\n    if (this.isWebWorker() && typeof this.SharedWorker !== 'undefined') {\n      isLegacy = !this.supportsSharedWorkers();\n    }\n    return isLegacy;\n  }\n\n  supportsSharedWorkers() {\n    let supports = false;\n    try {\n      let workerBlob = this.generateWorkerBlob(this.hamsterWheel);\n      let SharedHamster = new this.SharedWorker(workerBlob, 'SharedHamsterWheel');\n      supports = true;\n    } catch (e) {\n      supports = false;\n    }\n    return supports;\n  }\n\n  /**\n  * @function createDataBlob - Attempts to locate data blob builder, vender prefixes galore\n  */\n  locateBlobBuilder() {\n    if(typeof BlobBuilder !== 'undefined') {\n      return BlobBuilder;\n    }\n    if(typeof WebKitBlobBuilder !== 'undefined') {\n      return WebKitBlobBuilder;\n    }\n    if(typeof MozBlobBuilder !== 'undefined') {\n      return MozBlobBuilder;\n    }\n    if(typeof MSBlobBuilder !== 'undefined') {\n      return MSBlobBuilder;\n    }\n    return 'Environment does not support data blobs!';\n  }\n\n  /**\n  * @function createDataBlob - Creates new data blob from textContent\n  * @param {string} textContent - Provided text content for blob\n  */\n  createDataBlob(textContent) {\n    if(typeof Blob === 'undefined') {\n      let BlobMaker = this.locateBlobBuilder();\n      let blob = new BlobMaker();\n      blob.append([textContent], {\n        type: 'application/javascript'\n      });\n      return blob.getBlob();\n    }\n    return new Blob([textContent], {\n      type: 'application/javascript'\n    });\n  }\n\n  /**\n  * @function generateWorkerBlob - Creates blob uri for flexible scaffold loading\n  * @param {function} workerLogic - Scaffold to use within worker thread\n  */\n  generateWorkerBlob(workerLogic) {\n    return  URL.createObjectURL(this.createDataBlob('(' + String(workerLogic) + ')();'));\n  }\n\n  /**\n  * @function supportstransferableObjects - Detects if execution environment supports typed arrays\n  */\n  supportstransferableObjects() {\n    return (typeof Uint8Array !== 'undefined');\n  }\n\n  /**\n  * @function supportsAtomicOperations - Detects if execution environment supports shared array buffers\n  */\n  supportsAtomicOperations() {\n    return (typeof SharedArrayBuffer !== 'undefined');\n  }\n\n  /**\n  * @function supportsProxies - Detects if execution environment supports proxy objects\n  */\n  supportsProxies() {\n    return (typeof Proxy !== 'undefined');\n  }\n\n  /**\n  * @function scheduleTask - Determines which scaffold to use for proper execution for various environments\n  */\n  selectHamsterWheel() {\n    if(this.isIE10) {\n      return '../common/internetExplorer.js';\n    }\n    if(this.reactNative) {\n      return 'reactNativeHamster.js';\n    }\n    if (this.node) {\n      return './node_modules/hamsters.js/build/common/node.js';\n    }\n    return this.generateWorkerBlob(hamstersWheel.regular);\n  }\n}\n\nvar hamstersHabitat = new habitat();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersHabitat;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/habitat.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/node-libs-browser/~/process/browser.js\n// module id = 4\n// module chunks = 0","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\n\nclass wheel {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.worker = this.workerScaffold;\n    this.regular = this.regularScaffold;\n    this.legacy = this.legacyScaffold;\n  }\n\n  /**\n  * @function workerScaffold - Provides worker body for library functionality when used within a worker [threads inside threads]\n  */\n  workerScaffold() {\n    self.params = {};\n    self.rtn = {};\n\n    addEventListener('connect', (incomingConnection) => {\n      var port = incomingConnection.ports[0];\n      port.start();\n      port.addEventListener('message', (incomingMessage) => {\n        params = incomingMessage.data;\n        rtn = {\n          data: [],\n          dataType: params.dataType\n        };\n        eval(\"(\" + params.hamstersJob + \")\")();\n        port.postMessage(rtn);\n      }, false);\n    }, false);\n  }\n\n  /**\n  * @function workerScaffold - Provides worker body for library functionality\n  */\n  regularScaffold() {\n    self.params = {};\n    self.rtn = {};\n\n    self.onmessage = function(message) {\n      params = message.data;\n      rtn = {\n        data: [],\n        dataType: (typeof params.dataType !== 'undefined' ? params.dataType : null)\n      };\n      putHamsterToWork();\n    }\n\n    var putHamsterToWork = function() {\n      new Function(params.hamstersJob)();\n      returnResponse(rtn);\n    }\n\n    var returnResponse = function(rtn) {\n      if(rtn.dataType) {\n        rtn.data = typedArrayFromBuffer(rtn.dataType, rtn.data);\n        prepareTransferBuffers(rtn, []);\n      } else {\n        return postMessage(rtn);\n      }\n    }\n\n    var typedArrayFromBuffer = function(dataType, buffer) {\n      var types = {\n        'Uint32': Uint32Array,\n        'Uint16': Uint16Array,\n        'Uint8': Uint8Array,\n        'Uint8clamped': Uint8ClampedArray,\n        'Int32': Int32Array,\n        'Int16': Int16Array,\n        'Int8': Int8Array,\n        'Float32': Float32Array,\n        'Float64': Float64Array\n      };\n      if (!types[dataType]) {\n        return buffer;\n      }\n      return new types[dataType](buffer);\n    }\n\n    var prepareTransferBuffers = function(rtn, buffers) {\n      Object.keys(rtn).forEach(function(key) {\n        var item = rtn[key];\n        if(typeof item.buffer !== 'undefined') {\n          buffers.push(item.buffer);\n        } else {\n          if(Array.isArray(rtn[key]) && typeof ArrayBuffer !== 'undefined') {\n            buffers.push(new ArrayBuffer(rtn[key]));\n          }\n        }\n      });\n      return postMessage(rtn, buffers);\n    }\n  }\n\n\n\n  /**\n  * @function legacyScaffold - Provides library functionality for legacy devices\n  */\n  legacyScaffold(hamstersHabitat, params, resolve, reject) {\n    var rtn = {\n      data: [],\n      dataType: (params['dataType'] || null)\n    };\n    if(hamstersHabitat.reactNative || hamstersHabitat.node) {\n      self.rtn = rtn;\n    }\n    if(hamstersHabitat.node) {\n      global.rtn = rtn;\n    }\n    params.hamstersJob();\n    resolve(rtn);\n  }\n\n};\n\nvar hamstersWheel = new wheel();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersWheel;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/wheel.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nimport hamstersData from './data';\nimport hamstersHabitat from './habitat';\nimport hamstersLogger from './logger';\n\nclass pool {\n\t\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.tasks = [];\n\t  this.threads = [];\n    this.running = [];\n    this.pending = [];\n    this.fetchHamster = this.grabHamster;\n  }\n\n  /**\n  * @function grabHamster - Adds task to queue waiting for available thread\n  * @param {object} array - Provided data to execute logic on\n  * @param {object} task - Provided library functionality options for this task\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Results from select hamster wheel\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  addWorkToPending(array, task, persistence, wheel, resolve, reject) {\n  \tthis.pending.push(arguments);\n  }\n\n  /**\n  * @function grabHamster - Invokes processing of next item in queue\n  * @param {object} item - Task to process\n  */\n  processQueue(item, hamster) {\n  \treturn this.runTask(hamster, item[0], item[1], item[2], item[3], item[4]);\n  }\n\n  /**\n  * @function grabHamster - Keeps track of threads running, scoped globally and to task\n  * @param {number} threadId - Id of thread\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Results from select hamster wheel\n  */\n  grabHamster(threadId) {\n    if(hamstersHabitat.persistence) {\n      return this.threads[threadId];\n    }\n    return this.spawnHamster();\n  }\n\n  /**\n  * @function keepTrackOfThread - Keeps track of threads running, scoped globally and to task\n  * @param {object} task - Provided library functionality options for this task\n  * @param {number} id - Id of thread to track\n  */\n  keepTrackOfThread(task, id) {\n    task.workers.push(id); //Keep track of threads scoped to current task\n    this.running.push(id); //Keep track of all currently running threads\n  }\n\n  /**\n  * @function registerTask - Adds task to execution pool based on id\n  * @param {number} id - Id of task to register\n  */\n  registerTask(id) {\n    this.tasks.push(id);\n  }\n\n  /**\n  * @function spawnHamsters - Spawns multiple new threads for execution\n  * @param {function} wheel - Results from select hamster wheel\n  * @param {number} maxThreds - Max number of threads for this client\n  */\n  spawnHamsters(maxThreads) {\n    for (maxThreads; maxThreads > 0; maxThreads--) {\n      this.threads.push(this.spawnHamster());\n    }\n  }\n\n  /**\n  * @function spawnHamster - Spawns a new thread for execution\n  * @return {object} WebWorker - New WebWorker thread using selected scaffold\n  */\n  spawnHamster() {\n    if (hamstersHabitat.webWorker) {\n      return new hamstersHabitat.SharedWorker(hamstersHabitat.hamsterWheel, 'SharedHamsterWheel');\n    }\n    if(hamstersHabitat.node && typeof hamstersHabitat.parentPort !== 'undefined') {\n      return new hamstersHabitat.Worker(hamstersHabitat.hamsterWheel);\n    }\n    return new hamstersHabitat.Worker(hamstersHabitat.hamsterWheel);\n  }\n\n  /**\n  * @function prepareMeal - Prepares message to send to a thread and invoke execution\n  * @param {object} threadArray - Provided data to execute logic on\n  * @param {object} task - Provided library functionality options for this task\n  * @return {object} hamsterFood - Prepared message to send to a thread\n  */\n  prepareMeal(threadArray, task) {\n    let hamsterFood = {\n    \tarray: threadArray\n    };\n    for (var key in task.input) {\n      if (task.input.hasOwnProperty(key) && ['array', 'threads'].indexOf(key) === -1) {\n        hamsterFood[key] = task.input[key];\n      }\n    }\n    return hamsterFood;\n  }\n\n  /**\n  * @function hamsterWheel - Runs function using thread\n  * @param {object} array - Provided data to execute logic on\n  * @param {object} task - Provided library functionality options for this task\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Results from select hamster wheel\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  runTask(hamster, array, task, resolve, reject) {\n  \tlet threadId = this.running.length;\n    let hamsterFood = this.prepareMeal(array, task);\n    this.registerTask(task.id);\n    this.keepTrackOfThread(task, threadId);\n    if(hamstersHabitat.legacy) {\n      hamstersHabitat.legacyWheel(hamstersHabitat, hamsterFood, resolve, reject);\n    } else {\n      this.trainHamster(this, hamstersHabitat, task.count, task, hamster, resolve, reject);\n      hamstersData.feedHamster(hamstersHabitat, hamster, hamsterFood);\n    }\n    task.count += 1; //Increment count, thread is running\n  }\n\n  /**\n  * @function hamsterWheel - Runs or queues function using threads\n  * @param {object} array - Provided library functionality options for this task\n  * @param {object} task - Provided library functionality options for this task\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Results from select hamster wheel\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  hamsterWheel(array, task, resolve, reject) {\n    if(hamstersHabitat.maxThreads === this.running.length) {\n      return this.addWorkToPending(array, task, resolve, reject);\n    }\n    let hamster = this.grabHamster(this.running.length);\n    return this.runTask(hamster, array, task, resolve, reject);\n  }\n\n  /**\n  * @function returnOutputAndRemoveTask - gathers thread outputs into final result\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  */\n  returnOutputAndRemoveTask(task, resolve) {\n    let output = hamstersData.getOutput(task, hamstersHabitat.transferable);\n    if (task.sort) {\n      output = hamstersData.sortOutput(output, task.sort);\n    }\n    resolve(output);\n    this.tasks[task.id] = null; //Clean up our task, not needed any longer\n  }\n\n  removeFromRunning(task, threadId) {\n    this.running.splice(this.running.indexOf(threadId), 1); //Remove thread from running pool\n    task.workers.splice(task.workers.indexOf(threadId), 1); //Remove thread from task running pool\n  }\n\n  /**\n  * @function trainHamster - Trains thread in how to behave\n  * @param {number} threadId - Internal use id for this thread\n  * @param {object} task - Provided library functionality options for this task\n  * @param {worker} hamster - Thread to train\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  trainHamster(pool, habitat, threadId, task, hamster, resolve, reject) {\n    let onThreadResponse = function(message) {\n      pool.removeFromRunning(task, threadId);\n      if(typeof message.data.data !== \"undefined\") {\n        task.output[threadId] = message.data.data;\n      } else {\n        task.output[threadId] = (habitat.reactNative ? JSON.parse(message.data) : message.data);\n      }\n      if (task.workers.length === 0 && task.count === task.threads) {\n        pool.returnOutputAndRemoveTask(task, resolve);\n      }\n      if (pool.pending.length !== 0) {\n        return pool.processQueue(pool.pending.shift(), hamster);\n      }\n      if (!habitat.persistence && !habitat.webWorker) {\n        hamster.terminate(); //Kill the thread only if no items waiting to run (20-22% performance improvement observed during testing, repurposing threads vs recreating them)\n      }\n    }\n    if (habitat.webWorker) {\n      hamster.port.onmessage = onThreadResponse;\n      hamster.port.onmessageerror = reject;\n      hamster.port.onerror = reject;\n    } else if(habitat.node) {\n      hamster.once('message', onThreadResponse);\n      hamster.once('onmessageerror', reject);\n      hamster.once('error', reject);\n    } else {\n      hamster.onmessage = onThreadResponse;\n      hamster.onmessageerror = reject;\n      hamster.error = reject;\n    }\n  }\n\n  /**\n  * @function scheduleTask - Adds new task to the system for execution\n  * @param {object} task - Provided library functionality options for this task\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Scaffold to execute login within\n  * @param {number} maxThreads - Maximum number of threads for this client\n  */\n  scheduleTask(task) {\n  \treturn new Promise((resolve, reject) => {\n      let threadArrays = [];\n      if(task.input.array && task.threads !== 1) {\n        threadArrays = hamstersData.splitArrays(task.input.array, task.threads); //Divide our array into equal array sizes\n      }\n      let i = 0;\n      while (i < task.threads) {\n      \tif(threadArrays && task.threads !== 1) {\n        \tthis.hamsterWheel(threadArrays[i], task, resolve, reject);\n\t\t    } else {\n        \tthis.hamsterWheel(task.input.array, task, resolve, reject);\n\t\t    }\n        i += 1;\n      }\n    });\n  }\n}\n\nvar hamsterPool = new pool();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsterPool;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/pool.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nimport hamstersLogger from './logger';\n\nclass data {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.randomArray = this.randomArray;\n    this.aggregateArrays = this.aggregateThreadOutputs;\n    this.splitArrays = this.splitArrayIntoSubArrays;\n    this.processDataType = this.typedArrayFromBuffer;\n    this.sortOutput = this.sortArray;\n    this.getOutput = this.prepareOutput;\n    this.prepareJob = this.prepareFunction;\n    this.feedHamster = this.messageWorker;\n  }\n\n  /**\n  * @function messageWorker - Prepares message to send to thread\n  * @param {worker} hamster - Thread to message\n  * @param {object} hamsterFood - Message to send to thread\n  */  \n  messageWorker(hamstersHabitat, hamster, hamsterFood) {\n    if(hamstersHabitat.reactNative) {\n      return hamster.postMessage(JSON.stringify(hamsterFood));\n    }\n    if (hamstersHabitat.webWorker) {\n      return hamster.port.postMessage(hamsterFood);\n    }\n    let preparedTransfer = this.prepareTransferBuffers(hamsterFood, []);\n    return hamster.postMessage(preparedTransfer['hamsterFood'], preparedTransfer['buffers']);\n  }\n\n  /**\n  * @function prepareTransferBuffers - Prepares transferable buffers for faster message passing\n  * @param {object} hamsterFood - Message to send to thread\n  */\n  prepareTransferBuffers(hamsterFood, buffers) {\n    Object.keys(hamsterFood).forEach(function(key) {\n      let item = hamsterFood[key];\n      if(typeof item.buffer !== 'undefined') {\n        buffers.push(item.buffer);\n      } else {\n        if(Array.isArray(hamsterFood[key]) && typeof ArrayBuffer !== 'undefined') {\n          buffers.push(new ArrayBuffer(hamsterFood[key]));\n        }\n      }\n    });\n    return {\n      hamsterFood: hamsterFood,\n      buffers: buffers\n    };\n  }\n\n  /**\n  * @function prepareFunction - Prepares function for thread, strips whitespace\n  * @param {function} functionBody - Message to send to thread\n  */\n  prepareFunction(functionBody) {\n    let functionString = String(functionBody);\n    return functionString.substring((functionString.indexOf(\"{\") + 1), (functionString.length -1));\n  }\n\n  /**\n  * @function prepareOutput - Prepares final task output\n  * @param {task} buffer - Task to prepare output for\n  */\n  prepareOutput(task, transferable) {\n    if(task.threads === 1) {\n      return task.output[0];\n    }\n    if(task.aggregate) {\n      return this.aggregateThreadOutputs(task.output, task.dataType, transferable);\n    } else {\n      return task.output;\n    }\n  }\n\n  /**\n  * @function sortArray - Sorts array by defined order\n  * @param {object} arr - Array to sort\n  * @param {string} order - Defined sort order\n  */\n  sortArray(arr, order) {\n    switch(order) {\n      case 'desc':\n      case 'asc':\n        return Array.prototype.sort.call(arr, function(a, b) {\n          return (order === 'asc' ? (a - b) : (b - a)); \n        });\n      case 'ascAlpha':\n        return arr.sort();\n      case 'descAlpha':\n        return arr.reverse();\n      default:\n        return arr;\n    }\n  }\n\n  /**\n  * @function typedArrayFromBuffer - Converts buffer into new typed array\n  * @param {string} dataType - Typed array type for this task\n  * @param {object} buffer - Buffer to convert\n  */\n  typedArrayFromBuffer(dataType, buffer) {\n    const types = {\n      'Uint32': Uint32Array,\n      'Uint16': Uint16Array,\n      'Uint8': Uint8Array,\n      'Uint8clamped': Uint8ClampedArray,\n      'Int32': Int32Array,\n      'Int16': Int16Array,\n      'Int8': Int8Array,\n      'Float32': Float32Array,\n      'Float64': Float64Array\n    };\n    if(!types[dataType]) {\n      return buffer;\n    }\n    return new types[dataType](buffer);\n  }\n\n  /**\n  * @function randomArray - Creates new random array\n  * @param {number} count - Number of random elements in array\n  * @param {function} onSuccess - onSuccess callback\n  */\n  randomArray(count, onSuccess) {\n    var randomArray = [];\n    while(count > 0) {\n      randomArray.push(Math.round(Math.random() * (100 - 1) + 1));\n      count -= 1;\n    }\n    onSuccess(randomArray);\n  }\n\n  /**\n  * @function aggregateThreadOutputs - Joins individual thread outputs into single result\n  * @param {array} input - Array of arrays to aggregate\n  * @param {string} dataType - Data type to use for typed array\n  */\n  aggregateThreadOutputs(input, dataType, transferable) {\n    if(!dataType || !transferable) {\n      return input.reduce(function(a, b) {\n        return a.concat(b);\n      });\n    }\n    let i = 0;\n    let len = input.length;\n    let bufferLength = 0;\n    for (i; i < len; i += 1) {\n      bufferLength += input[i].length;\n    }\n    let output = this.processDataType(dataType, bufferLength);\n    let offset = 0;\n    for (i = 0; i < len; i += 1) {\n      output.set(input[i], offset);\n      offset += input[i].length;\n    }\n    return output;\n  }\n\n  /**\n  * @function splitArrayIntoSubArrays - Splits a single array into multiple equal sized subarrays\n  * @param {array} array - Array to split\n  * @param {number} n - Number of subarrays to create\n  */\n  splitArrayIntoSubArrays(array, n) {\n    let i = 0;\n    let threadArrays = [];\n    let size = Math.ceil(array.length/n);\n    if(array.slice) {\n      while(i < array.length) {\n        threadArrays.push(array.slice(i, i += size));\n      }\n    } else {\n      while (i < array.length) {\n        threadArrays.push(array.subarray(i, i += size));\n      }\n    }\n    return threadArrays;\n  }\n}\n\nvar hamstersData = new data();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersData;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/data.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nimport hamstersVersion from './version';\n\nclass logger {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.logBook = {\n      error: [], \n      warning: [], \n      info: []\n    };\n    this.info = this.infoLog;\n    this.warning = this.warningLog;\n    this.error = this.errorLog;\n    this.errorFromThread = this.errorFromThread;\n    this.saveLogEntry = this.saveToLogBook;\n    this.getLogEntries = this.fetchLogBook;\n    this.createAndSaveStampedMessage = this.generateTimeStampedMessage;\n    this.searchLogEntries = this.searchLogBook;\n  }\n\n  infoLog(message) {\n    let timeStampedMessage = this.createAndSaveStampedMessage('Info', message);\n    console.info(timeStampedMessage);\n  }\n\n  warningLog(message) {\n    let timeStampedMessage = this.createAndSaveStampedMessage('Warning', message);\n    console.warn(timeStampedMessage);\n  }\n\n  errorLog(message, reject) {\n    let timeStampedMessage = this.createAndSaveStampedMessage('Error', message);\n    console.error(timeStampedMessage);\n    if(reject) {\n      reject(timeStampedMessage);\n    } else {\n      return timeStampedMessage;\n    }\n  }\n\n  generateTimeStampedMessage(type, message) {\n    let record = `Hamsters.js v${hamstersVersion} ${type}: ${message} @ ${Date.now()}`\n    this.saveLogEntry(type.toLowerCase(), record);\n    return record;\n  }\n\n  errorFromThread(error, reject) {\n    let errorMessage = `#${error.lineno} in ${error.filename}: ${error.message}`;\n    this.errorLog(errorMessage, reject);\n  }\n\n  saveToLogBook(eventType, message) {\n    this.logBook[eventType].push(message);\n  }\n\n  fetchLogBook(eventType) {\n    if(eventType) {\n      return this.logBook[eventType];\n    }\n    return this.logBook;\n  }\n\n  findStringInLogBook(logBookEntries, searchString) {\n    let searchResults = [];\n    let i = 0;\n    for (i; i < logBookEntries.length; i++) {\n      if(logBookEntries[i].indexOf(searchString) !== -1) {\n        searchResults.push(logBookEntries[i]);\n      }\n    }\n    return searchResults;\n  }\n\n  findStringInLogBookAllTypes(logBook, searchString) {\n    let searchResults = [];\n    let key, eventTypeResults, tmpEntries = null;\n    for(key in logBook) {\n      if(logBook.hasOwnProperty(key)) {\n        tmpEntries = logBook[key];\n        eventTypeResults = this.findStringInLogBook(tmpEntries, searchString);\n        for (var i = eventTypeResults.length - 1; i >= 0; i--) {\n          searchResults.push(eventTypeResults[i])\n        }\n      }\n    }\n    return searchResults;\n  }\n\n  searchLogBook(searchString, eventType) {\n    let finalResults = [];\n    if(eventType) {\n      finalResults = this.findStringInLogBook(this.logBook[eventType], searchString);\n    } else {\n      finalResults = this.findStringInLogBookAllTypes(this.logBook, searchString);\n    }\n    return {\n      total: finalResults.length,\n      results: finalResults\n    };\n  }   \n}\n\nvar hamstersLogger = new logger();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersLogger;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/logger.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nclass memoizer {\n  \n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.maxCacheEntries = 25;\n    this.cacheEntries = [];\n    this.itemCached = this.isItemCached;\n    this.fetchItem = this.fetchItemFromCache;\n    this.saveItem = this.saveItemToCache;\n  }\n\n  /**\n  * @function isItemCached - Checks for existing data in cache\n  * @param {object} input - Provided library execution options\n  * @param {method} functionToRun - Function to execute\n  * @return {object} Execution results from cache, or false\n  */\n  isItemCached(input, method) {\n  \treturn !!(this.fetchItem({fn: method, data: input})) || false;\n  }\n\n  /**\n  * @function fetchItemFromCache - Fetches cache item from cache\n  * @param {object} cacheItem - Cache item to fetch\n  * @return {object} CacheResults, or false\n  */\n  fetchItemFromCache(cacheItem) {\n  \tlet cachedResult = null;\n    let key = null;\n    for(key of Object.keys(this.cacheEntries)) {\n      if((cacheItem[key].fn === cacheItem.fn) && (cacheItem[key].input === cacheItem.data)) {\n        cachedResult = cacheItem[key].input;\n      }\n    }\n  \treturn cachedResult || false;\n  }\n\n  /**\n  * @function isItemCached - Checks for existing data in cache\n  * @param {method} functionToRun - Function to execute\n  * @param {object} data - Execution results to cache\n  */\n  saveItemToCache(method, data, maxCacheEntries) {\n  \tlet itemToCache = {\n  \t\tfn: method,\n  \t\tinput: data\n  \t};\n  \tlet cachedItems = this.cacheEntries;\n  \tif(cachedItems.length < maxCacheEntries) {\n  \t\tcachedItems.push(itemToCache);\n  \t} else {\n  \t\tcachedItems.splice(0, 0, itemToCache); \n  \t}\n  \tthis.cacheEntries = cachedItems;\n  }\n}\n\nvar hamstersMemoizer = new memoizer();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersMemoizer;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/memoizer.js"],"sourceRoot":""}