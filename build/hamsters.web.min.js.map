{"version":3,"sources":["webpack:///webpack/bootstrap ea64c9375f5824d810c9","webpack:///./hamsters.js","webpack:///./core/version.js","webpack:///./core/habitat.js","webpack:///../~/node-libs-browser/~/process/browser.js","webpack:///./core/wheel.js","webpack:///./core/pool.js","webpack:///./core/data.js","webpack:///./core/logger.js"],"names":["hamstersjs","version","init","habitat","data","pool","logger","run","hamstersRun","bind","promise","hamstersPromise","startOptions","processStartOptions","legacy","persistence","spawnHamsters","maxThreads","info","Object","keys","key","indexOf","toLowerCase","forceLegacyMode","isIE","params","functionToRun","node","hamstersJob","prepareFunction","taskThreads","threads","indexes","getSubArrayIndexes","array","id","tasks","length","count","workers","memoize","dataType","input","task","resolve","reject","scheduleTask","then","results","catch","error","messsage","Promise","hamstersTask","onSuccess","onError","hamsters","module","exports","majorVersion","minorVersion","patchVersion","hamstersVersion","debug","importScripts","browser","isBrowser","webWorker","isWebWorker","isNode","reactNative","isReactNative","shell","isShell","transferable","supportstransferableObjects","atomics","supportsAtomicOperations","proxies","supportsProxies","isInternetExplorer","hamsterWheel","selectHamsterWheel","sharedWorker","locateSharedWorkerObject","locateBlobBuilder","isLegacyEnvironment","legacyWheel","Worker","locateWorkerObject","determineGlobalThreads","getHabitatKeys","max","navigator","hardwareConcurrency","isFirefox","os","cpus","userAgent","SharedWorker","window","process","product","isLegacy","supportsSharedWorkers","supports","workerBlob","generateWorkerBlob","SharedHamster","e","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","textContent","Blob","BlobMaker","blob","append","type","getBlob","workerLogic","URL","createObjectURL","createDataBlob","String","Uint8Array","SharedArrayBuffer","Proxy","regular","hamstersHabitat","wheel","worker","self","rtn","addEventListener","incomingConnection","port","ports","start","incomingMessage","eval","postMessage","onmessage","message","Function","typedArrayFromBuffer","returnResponse","buffer","types","Uint32Array","Uint16Array","Uint8ClampedArray","Int32Array","Int16Array","Int8Array","Float32Array","Float64Array","buffers","hamstersWheel","running","pending","fetchHamster","index","push","item","hamster","runTask","threadId","spawnHamster","parentPort","hamsterFood","getSubArrayFromIndex","hasOwnProperty","prepareMeal","registerTask","keepTrackOfThread","trainHamster","feedHamster","addWorkToPending","sort","sortOutput","splice","output","JSON","parse","addThreadOutputWithIndex","onThreadResponse","processReturn","removeFromRunning","returnOutputAndRemoveTask","processQueue","shift","terminate","onmessageerror","onerror","once","i","hamsterPool","stringify","functionBody","functionString","substring","arr","order","Array","prototype","call","a","b","reverse","outputLength","n","size","Math","ceil","end","slice","subarray","hamstersData","logBook","warning","errorFromThread","saveLogEntry","getLogEntries","createAndSaveStampedMessage","searchLogEntries","timeStampedMessage","console","warn","record","Date","now","errorMessage","lineno","filename","errorLog","eventType","logBookEntries","searchString","searchResults","eventTypeResults","tmpEntries","findStringInLogBook","finalResults","findStringInLogBookAllTypes","total","hamstersLogger"],"mappings":"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AJK,EAIU,SAJV,EAKL,OALK,EAKG,MALH,EAKU,OALV,EAML,aANK,EAMS,eANT,EAOL,YAPK,EAOS,YAPT,EAQL,WARK,CAAP;AAUD;;;;;;AAGH,KAAIC,kBAAkB,IAAIhI,OAAJ,EAAtB;;AAEA,KAAG,OAAOuD,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,OAAOC,OAAd,KAA0B,WAA9D,EAA2E;AACzED,UAAOC,OAAP,GAAiBwE,eAAjB;AACD,E;;;;;;;ACzPD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC;;AAErC;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;A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","file":"hamsters.web.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ea64c9375f5824d810c9","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nimport hamstersVersion from './core/version';\nimport hamstersHabitat from './core/habitat';\nimport hamstersPool from './core/pool';\nimport hamstersData from './core/data';\nimport hamstersLogger from './core/logger';\n\nclass hamstersjs {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.version = hamstersVersion;\n    this.init;\n    this.habitat = hamstersHabitat;\n    this.data = hamstersData;\n    this.pool = hamstersPool;\n    this.logger = hamstersLogger;\n    this.run = this.hamstersRun.bind(this);\n    this.promise = this.hamstersPromise.bind(this);\n  }\n\n  /**\n  * @function initializeLibrary - Prepares & initializes Hamsters.js library\n  * @param {object} startOptions - Provided library functionality options\n  */\n  init(startOptions) {\n    this.processStartOptions(startOptions);\n    if(!this.habitat.legacy && this.habitat.persistence === true) {\n      hamstersPool.spawnHamsters(this.habitat.maxThreads);\n    }\n    this.maxThreads = this.habitat.maxThreads;\n    hamstersLogger.info(`Initialized using up to ${this.habitat.maxThreads} threads.`);\n  }\n\n  /**\n  * @function processStartOptions - Adjusts library functionality based on provided options\n  * @param {object} startOptions - Provided library functionality options\n  */\n  processStartOptions(startOptions) {\n    if (typeof startOptions !== 'undefined') {\n      for (var key of Object.keys(startOptions)) {\n        if (this.habitat.keys.indexOf(key.toLowerCase()) !== -1) {\n          this.habitat[key] = startOptions[key];\n        } else {\n          this[key] = startOptions[key];\n        }\n      }\n    }\n    // Ensure legacy mode is disabled when we pass a third party worker library\n    var forceLegacyMode = (typeof startOptions !== 'undefined' && typeof startOptions.legacy !== 'undefined');\n    if(forceLegacyMode) {\n      forceLegacyMode = startOptions.legacy;\n    }\n    if(typeof this.habitat['Worker'] === 'function' && !forceLegacyMode) {\n      this.habitat.legacy = this.habitat.isIE;\n    }\n  }\n\n  /**\n  * @constructor\n  * @function hamstersTask - Constructs a new task object from provided arguments\n  * @param {object} params - Provided library execution options\n  * @param {function} functionToRun - Function to execute\n  * @return {object} new Hamsters.js task\n  */\n  hamstersTask(params, functionToRun) {\n    if(this.habitat.legacy && !this.habitat.node && !this.habitat.isIE) {\n      params.hamstersJob = functionToRun;\n    } else {\n      params.hamstersJob = this.data.prepareFunction(functionToRun);\n    }\n    let taskThreads = ((!this.habitat.legacy && params.threads) ? params.threads : 1);\n    let indexes = params.indexes;\n    if(taskThreads !== 1 && !indexes) {\n      indexes = this.data.getSubArrayIndexes(params.array, taskThreads);\n    }\n    return {\n      id: this.pool.tasks.length,\n      count: 0,\n      threads: taskThreads,\n      workers: [],\n      indexes: (indexes ? indexes : [{}]),\n      memoize: (params.memoize ? params.memoize : false),\n      dataType: (params.dataType ? params.dataType : null),\n      input: params\n    };\n  }\n\n  scheduleTask(task, resolve, reject) {\n    return this.pool.scheduleTask(task).then((results) => {\n      resolve(results);\n    }).catch((error) => {\n      this.logger.error(error.messsage, reject);\n    });\n  }\n\n  /**\n  * @async\n  * @function hamstersPromise - Calls library functionality using async promises\n  * @param {object} params - Provided library execution options\n  * @param {function} functionToRun - Function to execute\n  * @return {array} Results from functionToRun.\n  */\n  hamstersPromise(params, functionToRun) {\n    return new Promise((resolve, reject) => {\n      this.scheduleTask(this.hamstersTask(params, functionToRun), resolve, reject);\n    });\n  }\n\n  /**\n  * @async\n  * @function hamstersRun - Calls library functionality using async callbacks\n  * @param {object} params - Provided library execution options\n  * @param {function} functionToRun - Function to execute\n  * @param {function} onSuccess - Function to call upon successful execution\n  * @param {function} onError - Function to call upon execution failure\n  * @return {array} Results from functionToRun.\n  */\n  hamstersRun(params, functionToRun, onSuccess, onError) {\n    this.scheduleTask(this.hamstersTask(params, functionToRun), onSuccess, onError);\n  }\n}\n\nvar hamsters = new hamstersjs();\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsters;\n}\n\n\n// WEBPACK FOOTER //\n// ./hamsters.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nconst majorVersion = 5;\nconst minorVersion = 4;\nconst patchVersion = 0;\nconst hamstersVersion = `${majorVersion}.${minorVersion}.${patchVersion}`;\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersVersion;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/version.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nimport hamstersWheel from './wheel';\n\nclass habitat {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.debug = false;\n    this.importScripts = null;\n    this.memoize = false;\n    this.persistence = true;\n    this.browser = this.isBrowser();\n    this.webWorker = this.isWebWorker();\n    this.node = this.isNode();\n    this.reactNative = this.isReactNative();\n    this.shell = this.isShell();\n    this.transferable = this.supportstransferableObjects();\n    this.atomics = this.supportsAtomicOperations();\n    this.proxies = this.supportsProxies();\n    this.isIE = this.isInternetExplorer();\n    this.hamsterWheel = this.selectHamsterWheel();\n    this.sharedWorker = this.locateSharedWorkerObject();\n    this.locateBlobBuilder;\n    this.legacy = this.isLegacyEnvironment();\n    this.legacyWheel = hamstersWheel.legacy;\n    this.Worker = this.locateWorkerObject();\n    this.maxThreads = this.determineGlobalThreads();\n    this.keys = this.getHabitatKeys();\n  }\n\n  /**\n  * @function determineGlobalThreads - Determines max number of threads to use\n  */\n  determineGlobalThreads() {\n    let max = 4;\n    if(this.browser && typeof navigator.hardwareConcurrency !== \"undefined\") {\n      max = navigator.hardwareConcurrency;\n      if(this.isFirefox()) {\n        max = (max > 20 ? 20 : max);\n      }\n    }\n    if(this.node && typeof os !== 'undefined') {\n      max = os.cpus().length;\n    }\n    return max;\n  }\n\n  /**\n  * @function isFireox - Detect firefox browser\n  */\n  isFirefox() {\n    return (navigator.userAgent.toLowerCase().indexOf('firefox') !== -1);\n  }\n\n  /**\n  * @function locateWorkerObject - Attempts to find a global Worker object\n  */\n  locateWorkerObject() {\n    return (typeof Worker !== 'undefined' ? Worker : false);\n  }\n\n  /**\n  * @function locateSharedWorkerObject - Attempts to find a global SharedWorker object\n  */\n  locateSharedWorkerObject() {\n    return (typeof SharedWorker !== 'undefined' ? SharedWorker : false);\n  }\n\n  /**\n  * @function isBrowser - Detects if execution environment is a browser\n  */\n  isBrowser() {\n    return (typeof window === \"object\");\n  }\n\n  /**\n  * @function isInternetExplorer - Detects if execution environment is internet explorer\n  */\n  isInternetExplorer() {\n    return (navigator.userAgent.indexOf(\"MSIE \") !== -1 || navigator.userAgent.indexOf(\"Trident/\") !== -1);\n  }\n\n  /**\n  * @function isNode - Detects if execution environment is node.js\n  */\n  isNode() {\n    return (typeof process === \"object\" && typeof require === \"function\" && !this.isWebWorker() && !this.browser);\n  }\n\n  /**\n  * @function isWebWorker - Detects if execution environment is a webworker\n  */\n  isWebWorker() {\n    return (typeof importScripts === \"function\" && !this.isReactNative());\n  }\n\n  /**\n  * @function isReactNative - Detects if execution environment is reactNative\n  */\n  isReactNative() {\n    return (typeof navigator !== \"undefined\" && typeof navigator.product !== \"undefined\" && navigator.product == \"ReactNative\");\n  }\n\n  /**\n  * @function isShell - Detects if execution environment is a shell\n  */\n  isShell() {\n    return ((typeof navigator === \"undefined\") && !this.isNode() && !this.isWebWorker() && !this.isReactNative());\n  }\n\n  /**\n  * @function isLegacyEnvironment - Detects if execution environment is a legacy environment\n  */\n  isLegacyEnvironment() {\n    let isLegacy = !!!this.Worker;\n    // Detect sharedWorker support for use within webworkers\n    if (this.isWebWorker() && typeof this.SharedWorker !== 'undefined') {\n      isLegacy = !this.supportsSharedWorkers();\n    }\n    return isLegacy;\n  }\n\n  supportsSharedWorkers() {\n    let supports = false;\n    try {\n      let workerBlob = this.generateWorkerBlob(this.hamsterWheel);\n      let SharedHamster = new this.SharedWorker(workerBlob, 'SharedHamsterWheel');\n      supports = true;\n    } catch (e) {\n      supports = false;\n    }\n    return supports;\n  }\n\n  /**\n  * @function createDataBlob - Attempts to locate data blob builder, vender prefixes galore\n  */\n  locateBlobBuilder() {\n    if(typeof BlobBuilder !== 'undefined') {\n      return BlobBuilder;\n    }\n    if(typeof WebKitBlobBuilder !== 'undefined') {\n      return WebKitBlobBuilder;\n    }\n    if(typeof MozBlobBuilder !== 'undefined') {\n      return MozBlobBuilder;\n    }\n    if(typeof MSBlobBuilder !== 'undefined') {\n      return MSBlobBuilder;\n    }\n    return 'Environment does not support data blobs!';\n  }\n\n  /**\n  * @function createDataBlob - Creates new data blob from textContent\n  * @param {string} textContent - Provided text content for blob\n  */\n  createDataBlob(textContent) {\n    if(typeof Blob === 'undefined') {\n      let BlobMaker = this.locateBlobBuilder();\n      let blob = new BlobMaker();\n      blob.append([textContent], {\n        type: 'application/javascript'\n      });\n      return blob.getBlob();\n    }\n    return new Blob([textContent], {\n      type: 'application/javascript'\n    });\n  }\n\n  /**\n  * @function generateWorkerBlob - Creates blob uri for flexible scaffold loading\n  * @param {function} workerLogic - Scaffold to use within worker thread\n  */\n  generateWorkerBlob(workerLogic) {\n    return  URL.createObjectURL(this.createDataBlob('(' + String(workerLogic) + ')();'));\n  }\n\n  /**\n  * @function supportstransferableObjects - Detects if execution environment supports typed arrays\n  */\n  supportstransferableObjects() {\n    return (typeof Uint8Array !== 'undefined');\n  }\n\n  /**\n  * @function supportsAtomicOperations - Detects if execution environment supports shared array buffers\n  */\n  supportsAtomicOperations() {\n    return (typeof SharedArrayBuffer !== 'undefined');\n  }\n\n  /**\n  * @function supportsProxies - Detects if execution environment supports proxy objects\n  */\n  supportsProxies() {\n    return (typeof Proxy !== 'undefined');\n  }\n\n  /**\n  * @function scheduleTask - Determines which scaffold to use for proper execution for various environments\n  */\n  selectHamsterWheel() {\n    if(this.isIE) {\n      return hamstersWheel.legacy;\n    }\n    if(this.reactNative) {\n      return 'reactNativeHamster.js';\n    }\n    if (this.node) {\n      return './node_modules/hamsters.js/build/common/node.js';\n    }\n    return this.generateWorkerBlob(hamstersWheel.regular);\n  }\n\n  getHabitatKeys() {\n    return [\n      'worker','sharedworker',\n      'legacy','proxies',\n      'reactnative','atomics',\n      'transferable','browser',\n      'shell','node','debug',\n      'persistence','importscripts',\n      'maxThreads', 'parentPort',\n      'webworker',\n    ];\n  }\n}\n\nvar hamstersHabitat = new habitat();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersHabitat;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/habitat.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/node-libs-browser/~/process/browser.js\n// module id = 4\n// module chunks = 0","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\n\nclass wheel {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.worker;\n    this.regular;\n    this.legacy;\n  }\n\n  /**\n  * @function workerScaffold - Provides worker body for library functionality when used within a worker [threads inside threads]\n  */\n  worker() {\n    self.params = {};\n    self.rtn = {};\n\n    addEventListener('connect', (incomingConnection) => {\n      var port = incomingConnection.ports[0];\n      port.start();\n      port.addEventListener('message', (incomingMessage) => {\n        params = incomingMessage.data;\n        rtn = {\n          data: [],\n          dataType: params.dataType\n        };\n        eval(\"(\" + params.hamstersJob + \")\")();\n        port.postMessage(rtn);\n      }, false);\n    }, false);\n  }\n\n  /**\n  * @function workerScaffold - Provides worker body for library functionality\n  */\n  regular() {\n    self.params = {};\n    self.rtn = {};\n    self.onmessage = function(message) {\n      params = message.data;\n      rtn = {\n        data: [],\n        dataType: (typeof params.dataType !== 'undefined' ? params.dataType : null)\n      };\n      new Function(params.hamstersJob)();\n      if(rtn.dataType) {\n        rtn.data = typedArrayFromBuffer(rtn.dataType, rtn.data);\n      }\n      returnResponse(rtn);\n    }\n\n    var typedArrayFromBuffer = (dataType, buffer) => {\n      var types = {\n        'Uint32': Uint32Array,\n        'Uint16': Uint16Array,\n        'Uint8': Uint8Array,\n        'Uint8clamped': Uint8ClampedArray,\n        'Int32': Int32Array,\n        'Int16': Int16Array,\n        'Int8': Int8Array,\n        'Float32': Float32Array,\n        'Float64': Float64Array\n      };\n      if (!types[dataType]) {\n        return buffer;\n      }\n      return new types[dataType](buffer);\n    }\n\n    var returnResponse = function(rtn, buffers) {\n      if(typeof rtn.data.buffer !== 'undefined') {\n        postMessage(rtn, [rtn.data.buffer]);\n      } else {\n        postMessage(rtn);\n      }\n    }\n  }\n\n  /**\n  * @function legacyScaffold - Provides library functionality for legacy devices\n  */\n  legacy(hamstersHabitat, params, resolve, reject) {\n    var rtn = {\n      data: [],\n      dataType: (typeof params.dataType !== \"undefined\" ? params.dataType : null)\n    };\n    if(hamstersHabitat.reactNative) {\n      self.rtn = rtn;\n    }\n    if(hamstersHabitat.node || hamstersHabitat.isIE) {\n      eval(params.hamstersJob);\n    } else {\n      params.hamstersJob();\n    }\n    resolve(rtn.data);\n  }\n\n};\n\nvar hamstersWheel = new wheel();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersWheel;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/wheel.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nimport hamstersData from './data';\nimport hamstersHabitat from './habitat';\nimport hamstersLogger from './logger';\n\nclass pool {\n\t\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.tasks = [];\n\t  this.threads = [];\n    this.running = [];\n    this.pending = [];\n    this.fetchHamster;\n  }\n\n  /**\n  * @function fetchHamster - Adds task to queue waiting for available thread\n  * @param {object} array - Provided data to execute logic on\n  * @param {object} task - Provided library functionality options for this task\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Results from select hamster wheel\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  addWorkToPending(index, task, resolve, reject) {\n  \tthis.pending.push({\n      index,\n      task,\n      resolve,\n      reject\n    });\n  }\n\n  /**\n  * @function fetchHamster - Invokes processing of next item in queue\n  * @param {object} item - Task to process\n  */\n  processQueue(item, hamster) {\n  \treturn this.runTask(hamster, ...item);\n  }\n\n  /**\n  * @function fetchHamster - Keeps track of threads running, scoped globally and to task\n  * @param {number} threadId - Id of thread\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Results from select hamster wheel\n  */\n  fetchHamster(threadId) {\n    if(hamstersHabitat.persistence) {\n      return this.threads[threadId];\n    }\n    return this.spawnHamster();\n  }\n\n  /**\n  * @function keepTrackOfThread - Keeps track of threads running, scoped globally and to task\n  * @param {object} task - Provided library functionality options for this task\n  * @param {number} id - Id of thread to track\n  */\n  keepTrackOfThread(task, id) {\n    task.workers.push(id); //Keep track of threads scoped to current task\n    this.running.push(id); //Keep track of all currently running threads\n  }\n\n  /**\n  * @function registerTask - Adds task to execution pool based on id\n  * @param {number} id - Id of task to register\n  */\n  registerTask(id) {\n    this.tasks.push(id);\n  }\n\n  /**\n  * @function spawnHamsters - Spawns multiple new threads for execution\n  * @param {function} wheel - Results from select hamster wheel\n  * @param {number} maxThreds - Max number of threads for this client\n  */\n  spawnHamsters(maxThreads) {\n    for (maxThreads; maxThreads > 0; maxThreads--) {\n      this.threads.push(this.spawnHamster());\n    }\n  }\n\n  /**\n  * @function spawnHamster - Spawns a new thread for execution\n  * @return {object} WebWorker - New WebWorker thread using selected scaffold\n  */\n  spawnHamster() {\n    if (hamstersHabitat.webWorker) {\n      return new hamstersHabitat.SharedWorker(hamstersHabitat.hamsterWheel, 'SharedHamsterWheel');\n    }\n    if(hamstersHabitat.node && typeof hamstersHabitat.parentPort !== 'undefined') {\n      return new hamstersHabitat.Worker(hamstersHabitat.hamsterWheel);\n    }\n    return new hamstersHabitat.Worker(hamstersHabitat.hamsterWheel);\n  }\n\n  /**\n  * @function prepareMeal - Prepares message to send to a thread and invoke execution\n  * @param {object} threadArray - Provided data to execute logic on\n  * @param {object} task - Provided library functionality options for this task\n  * @return {object} hamsterFood - Prepared message to send to a thread\n  */\n  prepareMeal(index, task) {\n    const hamsterFood = {};\n    hamsterFood.array = hamstersData.getSubArrayFromIndex(index, task);\n    for (var key in task.input) {\n      if (task.input.hasOwnProperty(key) && ['array', 'threads'].indexOf(key) === -1) {\n        hamsterFood[key] = task.input[key];\n      }\n    }\n    return hamsterFood;\n  }\n\n  /**\n  * @function hamsterWheel - Runs function using thread\n  * @param {object} array - Provided data to execute logic on\n  * @param {object} task - Provided library functionality options for this task\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Results from select hamster wheel\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  runTask(hamster, index, task, resolve, reject) {\n  \tlet threadId = this.running.length;\n    let hamsterFood = this.prepareMeal(index, task);\n    this.registerTask(task.id);\n    this.keepTrackOfThread(task, threadId);\n    if(hamstersHabitat.legacy) {\n      hamstersHabitat.legacyWheel(hamstersHabitat, hamsterFood, resolve, reject);\n    } else {\n      this.trainHamster(this, hamstersHabitat, index, task, hamster, resolve, reject);\n      hamstersData.feedHamster(hamstersHabitat, hamster, hamsterFood);\n    }\n    task.count += 1; //Increment count, thread is running\n  }\n\n  /**\n  * @function hamsterWheel - Runs or queues function using threads\n  * @param {object} array - Provided library functionality options for this task\n  * @param {object} task - Provided library functionality options for this task\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Results from select hamster wheel\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  hamsterWheel(index, task, resolve, reject) {\n    if(hamstersHabitat.maxThreads === this.running.length) {\n      return this.addWorkToPending(index, task, resolve, reject);\n    }\n    let hamster = this.fetchHamster(this.running.length);\n    return this.runTask(hamster, index, task, resolve, reject);\n  }\n\n  /**\n  * @function returnOutputAndRemoveTask - gathers thread outputs into final result\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  */\n  returnOutputAndRemoveTask(task, resolve) {\n    if (task.sort) {\n      resolve(hamstersData.sortOutput(task.input.array, task.sort));\n    } else {\n      resolve(task.input.array);\n    }\n    this.tasks[task.id] = null; //Clean up our task, not needed any longer\n  }\n\n  removeFromRunning(task, threadId) {\n    this.running.splice(this.running.indexOf(threadId), 1); //Remove thread from running pool\n    task.workers.splice(task.workers.indexOf(threadId), 1); //Remove thread from task running pool\n  }\n\n  processReturn(habitat, index, message, task) {\n    let output = message.data;\n    if(habitat.reactNative) {\n      output = JSON.parse(message).data;\n    }\n    if(typeof message.data.data !== \"undefined\") {\n      output = message.data.data;\n    }\n    if(task.threads !== 1) {\n      hamstersData.addThreadOutputWithIndex(task, index, output);\n    } else {\n      task.input.array = output;\n    }\n  }\n\n  /**\n  * @function trainHamster - Trains thread in how to behave\n  * @param {number} threadId - Internal use id for this thread\n  * @param {object} task - Provided library functionality options for this task\n  * @param {worker} hamster - Thread to train\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  trainHamster(pool, habitat, index, task, hamster, resolve, reject) {\n    let onThreadResponse = (message) => {\n      pool.processReturn(habitat, index, message, task);\n      pool.removeFromRunning(task, task.count);\n      if (task.workers.length === 0 && task.count === task.threads) {\n        pool.returnOutputAndRemoveTask(task, resolve);\n      }\n      if (pool.pending.length !== 0) {\n        return pool.processQueue(pool.pending.shift(), hamster);\n      }\n      if(!habitat.persistence) {\n        return hamster.terminate(); //Kill the thread only if no items waiting to run (20-22% performance improvement observed during testing, repurposing threads vs recreating them)\n      }\n    }\n    if (habitat.webWorker) {\n      hamster.port.onmessage = onThreadResponse;\n      hamster.port.onmessageerror = reject;\n      hamster.port.onerror = reject;\n    }\n    if(habitat.node) {\n      hamster.once('message', onThreadResponse);\n      hamster.once('onmessageerror', reject);\n      hamster.once('error', reject);\n    } else {\n      hamster.onmessage = onThreadResponse;\n      hamster.onmessageerror = reject;\n      hamster.error = reject;\n    }\n  }\n\n  /**\n  * @function scheduleTask - Adds new task to the system for execution\n  * @param {object} task - Provided library functionality options for this task\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Scaffold to execute login within\n  * @param {number} maxThreads - Maximum number of threads for this client\n  */\n  scheduleTask(task) {\n  \treturn new Promise((resolve, reject) => {\n      let i = 0;\n      while (i < task.threads) {\n        this.hamsterWheel(task.indexes[i], task, resolve, reject);\n        i += 1;\n      }\n    });\n  }\n}\n\nvar hamsterPool = new pool();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsterPool;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/pool.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nimport hamstersLogger from './logger';\n\nclass data {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.getSubArrayFromIndex;\n    this.getSubArrayIndexes;\n    this.sortOutput;\n    this.prepareFunction;\n    this.feedHamster;\n  }\n\n  /**\n  * @function messageWorker - Prepares message to send to thread\n  * @param {worker} hamster - Thread to message\n  * @param {object} hamsterFood - Message to send to thread\n  */  \n  feedHamster(hamstersHabitat, hamster, hamsterFood) {\n    if(hamstersHabitat.reactNative) {\n      return hamster.postMessage(JSON.stringify(hamsterFood));\n    }\n    if (hamstersHabitat.webWorker) {\n      return hamster.port.postMessage(hamsterFood);\n    }\n    if(typeof hamsterFood.array.buffer !== 'undefined') {\n      hamster.postMessage(hamsterFood, [hamsterFood.array.buffer]);\n    } else {\n      hamster.postMessage(hamsterFood);\n    }\n  }\n\n  /**\n  * @function prepareFunction - Prepares function for thread, strips whitespace\n  * @param {function} functionBody - Message to send to thread\n  */\n  prepareFunction(functionBody) {\n    let functionString = String(functionBody);\n    return functionString.substring((functionString.indexOf(\"{\") + 1), (functionString.length -1));\n  }\n\n  /**\n  * @function sortArray - Sorts array by defined order\n  * @param {object} arr - Array to sort\n  * @param {string} order - Defined sort order\n  */\n  sortOutput(arr, order) {\n    switch(order) {\n      case 'desc':\n      case 'asc':\n        return Array.prototype.sort.call(arr, function(a, b) {\n          return (order === 'asc' ? (a - b) : (b - a)); \n        });\n      case 'ascAlpha':\n        return arr.sort();\n      case 'descAlpha':\n        return arr.reverse();\n      default:\n        return arr;\n    }\n  }\n\n  /**\n  * @function addThreadOutputWithIndex - Joins individual thread outputs into single result\n  * @param {array} input - Array of arrays to aggregate\n  * @param {string} dataType - Data type to use for typed array\n  */\n  addThreadOutputWithIndex(task, index, output) {\n    if(task.threads === 1) {\n      return task.input.array = output;\n    }\n    if(typeof task.input.array.splice === \"function\") {\n      return task.input.array.splice(index.start, output.length, ...output);\n    }\n    let i = 0;\n    let outputLength = output.length;\n    for (i; i < outputLength; i++) {\n      task.input.array[(index.start + i)] = output[i];\n    }\n  }\n\n  /**\n  * @function splitArrayIntoSubArrays - Splits a single array into multiple equal sized subarrays\n  * @param {array} array - Array to split\n  * @param {number} n - Number of subarrays to create\n  */\n  getSubArrayIndexes(array, n) {\n    let indexes = [];\n    let i = 0;\n    let size = Math.ceil(array.length/n);\n    while (i < array.length) {\n      indexes.push({start: i, end: i += size});\n    }\n    return indexes;\n  }\n\n  /**\n  * @function splitArrayIntoSubArrays - Splits a single array into multiple equal sized subarrays\n  * @param {array} array - Array to split\n  * @param {number} n - Number of subarrays to create\n  */\n  getSubArrayFromIndex(index, task) {\n    if(typeof task.input.array.slice === \"function\") {\n      return task.input.array.slice(index.start, index.end);\n    }\n    return task.input.array.subarray(index.start, index.end);\n  }\n}\n\nvar hamstersData = new data();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersData;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/data.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nimport hamstersVersion from './version';\n\nclass logger {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.logBook = {\n      error: [], \n      warning: [], \n      info: []\n    };\n    this.info;\n    this.warning;\n    this.error;\n    this.errorFromThread;\n    this.saveLogEntry;\n    this.getLogEntries;\n    this.createAndSaveStampedMessage;\n    this.searchLogEntries;\n  }\n\n  info(message) {\n    let timeStampedMessage = this.createAndSaveStampedMessage('Info', message);\n    console.info(timeStampedMessage);\n  }\n\n  warning(message) {\n    let timeStampedMessage = this.createAndSaveStampedMessage('Warning', message);\n    console.warn(timeStampedMessage);\n  }\n\n  error(message, reject) {\n    let timeStampedMessage = this.createAndSaveStampedMessage('Error', message);\n    console.error(timeStampedMessage);\n    if(reject) {\n      reject(timeStampedMessage);\n    } else {\n      return timeStampedMessage;\n    }\n  }\n\n  createAndSaveStampedMessage(type, message) {\n    let record = `Hamsters.js v${hamstersVersion} ${type}: ${message} @ ${Date.now()}`\n    this.saveLogEntry(type.toLowerCase(), record);\n    return record;\n  }\n\n  errorFromThread(error, reject) {\n    let errorMessage = `#${error.lineno} in ${error.filename}: ${error.message}`;\n    this.errorLog(errorMessage, reject);\n  }\n\n  saveLogEntry(eventType, message) {\n    this.logBook[eventType].push(message);\n  }\n\n  getLogEntries(eventType) {\n    if(eventType) {\n      return this.logBook[eventType];\n    }\n    return this.logBook;\n  }\n\n  findStringInLogBook(logBookEntries, searchString) {\n    let searchResults = [];\n    let i = 0;\n    for (i; i < logBookEntries.length; i++) {\n      if(logBookEntries[i].indexOf(searchString) !== -1) {\n        searchResults.push(logBookEntries[i]);\n      }\n    }\n    return searchResults;\n  }\n\n  findStringInLogBookAllTypes(logBook, searchString) {\n    let searchResults = [];\n    let key, eventTypeResults, tmpEntries = null;\n    for(key in logBook) {\n      if(logBook.hasOwnProperty(key)) {\n        tmpEntries = logBook[key];\n        eventTypeResults = this.findStringInLogBook(tmpEntries, searchString);\n        for (var i = eventTypeResults.length - 1; i >= 0; i--) {\n          searchResults.push(eventTypeResults[i])\n        }\n      }\n    }\n    return searchResults;\n  }\n\n  searchLogEntries(searchString, eventType) {\n    let finalResults = [];\n    if(eventType) {\n      finalResults = this.findStringInLogBook(this.logBook[eventType], searchString);\n    } else {\n      finalResults = this.findStringInLogBookAllTypes(this.logBook, searchString);\n    }\n    return {\n      total: finalResults.length,\n      results: finalResults\n    };\n  }   \n}\n\nvar hamstersLogger = new logger();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersLogger;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/logger.js"],"sourceRoot":""}